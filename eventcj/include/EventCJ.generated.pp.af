PP-Table([PP-Entry(Path1("Layer"),[FBOX(KW,S("\"layer\"")),Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Layer",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("Proceed"),[FBOX(KW,S("\"proceed\""))]),PP-Entry(Path1("PartialMethodDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("PartialMethodHead"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6")]),PP-Entry(Path("PartialMethodHead",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("PartialMethodHead",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("PartialMethodHead",[selector("6","opt")]),[Arg("1")]),PP-Entry(Path1("Activation"),[FBOX(KW,S("\"activate\"")),Arg("1")]),PP-Entry(Path1("Deactivation"),[FBOX(KW,S("\"deactivate\"")),Arg("1")]),PP-Entry(Path1("AfterTiming"),[FBOX(KW,S("\"after\""))]),PP-Entry(Path1("BeforeTiming"),[FBOX(KW,S("\"before\""))]),PP-Entry(Path1("AroundTiming"),[FBOX(KW,S("\"around\""))]),PP-Entry(Path1("NotComp"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("AndComp"),[Arg("1"),FBOX(KW,S("\"&&\"")),Arg("2")]),PP-Entry(Path1("OrComp"),[Arg("1"),FBOX(KW,S("\"||\"")),Arg("2")]),PP-Entry(Path1("SimpleAnnoPattern"),[FBOX(KW,S("\"@\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("SimpleAnnoPatternExact"),[FBOX(KW,S("\"@\"")),Arg("1")]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("AnnoPattern"),[Arg("1")]),PP-Entry(Path("AnnoPattern",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("AnnoPattern",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("AnnoPattern"),[Arg("1")]),PP-Entry(Path("AnnoPattern",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path("AnnoPattern",[selector("1","iter"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("RefTypePattern"),[Arg("1")]),PP-Entry(Path1("PrimTypePattern"),[Arg("1")]),PP-Entry(Path1("Void"),[FBOX(KW,S("\"void\""))]),PP-Entry(Path1("ArrayType"),[Arg("1"),FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("Wildcard"),[FBOX(KW,S("\"?\""))]),PP-Entry(Path1("Subtype"),[Arg("1"),FBOX(KW,S("\"+\""))]),PP-Entry(Path1("GenericTypePattern"),[Arg("1"),Arg("2")]),PP-Entry(Path1("GenericSubtypePattern"),[Arg("1"),Arg("2"),FBOX(KW,S("\"+\""))]),PP-Entry(Path1("AnnoTypePattern"),[FBOX(KW,S("\"(\"")),Arg("1"),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("AnnoTypePattern"),[Arg("1"),Arg("2")]),PP-Entry(Path1("TypeParam"),[Arg("1"),Arg("2")]),PP-Entry(Path("TypeParam",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("TypeParams"),[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\">\""))]),PP-Entry(Path("TypeParams",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("WildcardUpperBound"),V([],[H([],[FBOX(KW,S("\"extends\""))]),Arg("1")])),PP-Entry(Path("WildcardUpperBound",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\"&\""))]),PP-Entry(Path1("WildcardLowerBound"),V([],[H([],[FBOX(KW,S("\"super\""))]),Arg("1")])),PP-Entry(Path("WildcardLowerBound",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\"&\""))]),PP-Entry(Path1("NamePattern"),[Arg("1")]),PP-Entry(Path1("NamePattern"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("WildcardNamePattern"),[Arg("1"),FBOX(KW,S("\"..\"")),Arg("2")]),PP-Entry(Path1("FormalWildcard"),[FBOX(KW,S("\"..\""))]),PP-Entry(Path1("VarArityParamPattern"),[Arg("1"),FBOX(KW,S("\"...\""))]),PP-Entry(Path1("SimpleNamePattern"),[Arg("1")]),PP-Entry(Path1("Generic"),[Arg("1"),Arg("2")]),PP-Entry(Path1("Subtype"),[Arg("1"),FBOX(KW,S("\"+\""))]),PP-Entry(Path1("Subtype"),[Arg("1"),FBOX(KW,S("\"+\"")),Arg("2")]),PP-Entry(Path1("Subtype"),[Arg("1"),Arg("2"),FBOX(KW,S("\"+\""))]),PP-Entry(Path1("MethodPattern"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6")]),PP-Entry(Path("MethodPattern",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("MethodPattern",[selector("6","opt")]),[Arg("1")]),PP-Entry(Path1("ConstrPattern"),[Arg("1"),Arg("2"),Arg("3"),FBOX(KW,S("\"(\"")),Arg("4"),FBOX(KW,S("\")\"")),Arg("5")]),PP-Entry(Path("ConstrPattern",[selector("4","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("ConstrPattern",[selector("5","opt")]),[Arg("1")]),PP-Entry(Path1("FieldPattern"),[Arg("1"),Arg("2"),Arg("3"),Arg("4")]),PP-Entry(Path1("MemberName"),[Arg("1")]),PP-Entry(Path1("MemberName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("WildcardMemberName"),[Arg("1"),FBOX(KW,S("\"..\"")),Arg("2")]),PP-Entry(Path1("ConstrName"),[FBOX(KW,S("\"new\""))]),PP-Entry(Path1("ConstrName"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"new\""))]),PP-Entry(Path1("WildcardConstrName"),[Arg("1"),FBOX(KW,S("\"..\"")),FBOX(KW,S("\"new\""))]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("ModPattern"),[Arg("1")]),PP-Entry(Path("ModPattern",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ModPattern",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("ModPattern"),[Arg("1")]),PP-Entry(Path("ModPattern",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ModPattern",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("ModPattern"),[Arg("1")]),PP-Entry(Path("ModPattern",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ModPattern",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("ThrowsPattern"),V([],[H([],[FBOX(KW,S("\"throws\""))]),Arg("1")])),PP-Entry(Path("ThrowsPattern",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("NotThrowsCondition"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("ThrowsCondition"),[Arg("1")]),PP-Entry(Path1("Direction"),[FBOX(KW,S("\"direction\"")),Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("Direction",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("EventDecl"),[FBOX(KW,S("\"declare\"")),FBOX(KW,S("\"event\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\":\"")),Arg("3"),Arg("4"),FBOX(KW,S("\";\""))]),PP-Entry(Path("EventDecl",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("EventDecl",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path1("SendTo"),[FBOX(KW,S("\":\"")),FBOX(KW,S("\"sendTo\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("TransitionRuleDecl"),[FBOX(KW,S("\"transition\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\":\"")),Arg("3"),FBOX(KW,S("\";\""))]),PP-Entry(Path("TransitionRuleDecl",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("SwitchLayer"),[Arg("1"),FBOX(KW,S("\"switchTo\"")),Arg("2")]),PP-Entry(Path1("ActivateLayer"),[Arg("1"),FBOX(KW,S("\"activate\"")),Arg("2")]),PP-Entry(Path1("TransitionRuleComposition"),[Arg("1"),FBOX(KW,S("\"|\"")),Arg("2")]),PP-Entry(Path1("AnnonLayer"),[FBOX(KW,S("\"*\""))]),PP-Entry(Path1("IfNotActive"),[FBOX(KW,S("\"not\"")),Arg("1")]),PP-Entry(Path1("NoLayer"),[FBOX(KW,S("\".\""))]),PP-Entry(Path1("ActionSelector"),[Arg("1"),Arg("2")]),PP-Entry(Path1("TargetSelector"),[FBOX(KW,S("\"target\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("ThisSelector"),[FBOX(KW,S("\"this\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("Exec"),[FBOX(KW,S("\"execution\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("Call"),[FBOX(KW,S("\"call\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("Wildcard"),[FBOX(KW,S("\"*\""))]),PP-Entry(Path1("DotWildcard"),[FBOX(KW,S("\"..\""))]),PP-Entry(Path1("Subtype"),[Arg("1"),FBOX(KW,S("\"+\""))]),PP-Entry(Path1("Assign"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("AssignMul"),[Arg("1"),FBOX(KW,S("\"*=\"")),Arg("2")]),PP-Entry(Path1("AssignDiv"),[Arg("1"),FBOX(KW,S("\"/=\"")),Arg("2")]),PP-Entry(Path1("AssignRemain"),[Arg("1"),FBOX(KW,S("\"%=\"")),Arg("2")]),PP-Entry(Path1("AssignPlus"),[Arg("1"),FBOX(KW,S("\"+=\"")),Arg("2")]),PP-Entry(Path1("AssignMinus"),[Arg("1"),FBOX(KW,S("\"-=\"")),Arg("2")]),PP-Entry(Path1("AssignLeftShift"),[Arg("1"),FBOX(KW,S("\"<<=\"")),Arg("2")]),PP-Entry(Path1("AssignRightShift"),[Arg("1"),FBOX(KW,S("\">>=\"")),Arg("2")]),PP-Entry(Path1("AssignURightShift"),[Arg("1"),FBOX(KW,S("\">>>=\"")),Arg("2")]),PP-Entry(Path1("AssignAnd"),[Arg("1"),FBOX(KW,S("\"&=\"")),Arg("2")]),PP-Entry(Path1("AssignExcOr"),[Arg("1"),FBOX(KW,S("\"^=\"")),Arg("2")]),PP-Entry(Path1("AssignOr"),[Arg("1"),FBOX(KW,S("\"|=\"")),Arg("2")]),PP-Entry(Path1("InstanceOf"),[Arg("1"),FBOX(KW,S("\"instanceof\"")),Arg("2")]),PP-Entry(Path1("Mul"),[Arg("1"),FBOX(KW,S("\"*\"")),Arg("2")]),PP-Entry(Path1("Div"),[Arg("1"),FBOX(KW,S("\"/\"")),Arg("2")]),PP-Entry(Path1("Remain"),[Arg("1"),FBOX(KW,S("\"%\"")),Arg("2")]),PP-Entry(Path1("Plus"),[Arg("1"),FBOX(KW,S("\"+\"")),Arg("2")]),PP-Entry(Path1("Minus"),[Arg("1"),FBOX(KW,S("\"-\"")),Arg("2")]),PP-Entry(Path1("LeftShift"),[Arg("1"),FBOX(KW,S("\"<<\"")),Arg("2")]),PP-Entry(Path1("RightShift"),[Arg("1"),FBOX(KW,S("\">>\"")),Arg("2")]),PP-Entry(Path1("URightShift"),[Arg("1"),FBOX(KW,S("\">>>\"")),Arg("2")]),PP-Entry(Path1("Lt"),[Arg("1"),FBOX(KW,S("\"<\"")),Arg("2")]),PP-Entry(Path1("Gt"),[Arg("1"),FBOX(KW,S("\">\"")),Arg("2")]),PP-Entry(Path1("LtEq"),[Arg("1"),FBOX(KW,S("\"<=\"")),Arg("2")]),PP-Entry(Path1("GtEq"),[Arg("1"),FBOX(KW,S("\">=\"")),Arg("2")]),PP-Entry(Path1("Eq"),[Arg("1"),FBOX(KW,S("\"==\"")),Arg("2")]),PP-Entry(Path1("NotEq"),[Arg("1"),FBOX(KW,S("\"!=\"")),Arg("2")]),PP-Entry(Path1("LazyAnd"),[Arg("1"),FBOX(KW,S("\"&&\"")),Arg("2")]),PP-Entry(Path1("LazyOr"),[Arg("1"),FBOX(KW,S("\"||\"")),Arg("2")]),PP-Entry(Path1("And"),[Arg("1"),FBOX(KW,S("\"&\"")),Arg("2")]),PP-Entry(Path1("ExcOr"),[Arg("1"),FBOX(KW,S("\"^\"")),Arg("2")]),PP-Entry(Path1("Or"),[Arg("1"),FBOX(KW,S("\"|\"")),Arg("2")]),PP-Entry(Path1("Cond"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path1("Plus"),[FBOX(KW,S("\"+\"")),Arg("1")]),PP-Entry(Path1("Minus"),[FBOX(KW,S("\"-\"")),Arg("1")]),PP-Entry(Path1("PreIncr"),[FBOX(KW,S("\"++\"")),Arg("1")]),PP-Entry(Path1("PreDecr"),[FBOX(KW,S("\"--\"")),Arg("1")]),PP-Entry(Path1("Complement"),[FBOX(KW,S("\"~\"")),Arg("1")]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("CastPrim"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("CastRef"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("PostIncr"),[Arg("1"),FBOX(KW,S("\"++\""))]),PP-Entry(Path1("PostDecr"),[Arg("1"),FBOX(KW,S("\"--\""))]),PP-Entry(Path1("Invoke"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("Invoke",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Method"),[Arg("1")]),PP-Entry(Path1("Method"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),Arg("3")]),PP-Entry(Path("Method",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("SuperMethod"),[FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("1"),Arg("2")]),PP-Entry(Path("SuperMethod",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("QSuperMethod"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("2"),Arg("3")]),PP-Entry(Path("QSuperMethod",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("GenericMethod"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),Arg("3")]),PP-Entry(Path1("ArrayAccess"),[Arg("1"),Arg("2")]),PP-Entry(Path1("Field"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("SuperField"),[FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("1")]),PP-Entry(Path1("QSuperField"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("NewArray"),[FBOX(KW,S("\"new\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("NewArray",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path("NewArray",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path1("NewArray"),[FBOX(KW,S("\"new\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("NewArray",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("UnboundWld"),[Arg("1"),FBOX(KW,S("\"<\"")),FBOX(KW,S("\"?\"")),FBOX(KW,S("\">\""))]),PP-Entry(Path1("Dim"),[FBOX(KW,S("\"[\"")),Arg("1"),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("Dim"),[FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("NewInstance"),[FBOX(KW,S("\"new\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"(\"")),Arg("3"),FBOX(KW,S("\")\"")),Arg("4")]),PP-Entry(Path("NewInstance",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("NewInstance",[selector("3","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("NewInstance",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path1("QNewInstance"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"new\"")),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6")]),PP-Entry(Path("QNewInstance",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("QNewInstance",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path("QNewInstance",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("QNewInstance",[selector("6","opt")]),[Arg("1")]),PP-Entry(Path1("Lit"),[Arg("1")]),PP-Entry(Path1("Class"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"class\""))]),PP-Entry(Path1("VoidClass"),[FBOX(KW,S("\"void\"")),FBOX(KW,S("\".\"")),FBOX(KW,S("\"class\""))]),PP-Entry(Path1("This"),[FBOX(KW,S("\"this\""))]),PP-Entry(Path1("QThis"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"this\""))]),PP-Entry(Path1("PackageDec"),[Arg("1"),FBOX(KW,S("\"package\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("PackageDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("TypeImportDec"),[FBOX(KW,S("\"import\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("TypeImportOnDemandDec"),[FBOX(KW,S("\"import\"")),Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"*\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("StaticImportDec"),[FBOX(KW,S("\"import\"")),FBOX(KW,S("\"static\"")),Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("StaticImportOnDemandDec"),[FBOX(KW,S("\"import\"")),FBOX(KW,S("\"static\"")),Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"*\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("AnnoDec"),[Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("AnnoDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("AnnoDecHead"),[Arg("1"),FBOX(KW,S("\"@\"")),FBOX(KW,S("\"interface\"")),Arg("2")]),PP-Entry(Path("AnnoDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("AnnoDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("AnnoMethodDec"),[Arg("1"),Arg("2"),Arg("3"),FBOX(KW,S("\"(\"")),FBOX(KW,S("\")\"")),Arg("4"),FBOX(KW,S("\";\""))]),PP-Entry(Path("AnnoMethodDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("AnnoMethodDec",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("DefaultVal"),[FBOX(KW,S("\"default\"")),Arg("1")]),PP-Entry(Path1("AbstractMethodDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6"),FBOX(KW,S("\";\""))]),PP-Entry(Path("AbstractMethodDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("AbstractMethodDec",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("AbstractMethodDec",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("AbstractMethodDec",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("AbstractMethodDec",[selector("6","opt")]),[Arg("1")]),PP-Entry(Path1("DeprAbstractMethodDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6"),Arg("7"),FBOX(KW,S("\";\""))]),PP-Entry(Path("DeprAbstractMethodDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("DeprAbstractMethodDec",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("DeprAbstractMethodDec",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("DeprAbstractMethodDec",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("DeprAbstractMethodDec",[selector("6","iter")]),[Arg("1")]),PP-Entry(Path("DeprAbstractMethodDec",[selector("7","opt")]),[Arg("1")]),PP-Entry(Path1("ConstantDec"),[Arg("1"),Arg("2"),Arg("3"),FBOX(KW,S("\";\""))]),PP-Entry(Path("ConstantDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ConstantDec",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("ConstantDec",[selector("3","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("InterfaceDec"),[Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("InterfaceDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("InterfaceDecHead"),[Arg("1"),FBOX(KW,S("\"interface\"")),Arg("2"),Arg("3"),Arg("4")]),PP-Entry(Path("InterfaceDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("InterfaceDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("InterfaceDecHead",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path("InterfaceDecHead",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path1("ExtendsInterfaces"),V([],[H([],[FBOX(KW,S("\"extends\""))]),Arg("1")])),PP-Entry(Path("ExtendsInterfaces",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("EnumDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("EnumDecHead"),[Arg("1"),FBOX(KW,S("\"enum\"")),Arg("2"),Arg("3")]),PP-Entry(Path("EnumDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("EnumDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("EnumDecHead",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("EnumBody"),[FBOX(KW,S("\"{\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("EnumBody",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("EnumBody",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("EnumBody"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("EnumBody",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("EnumBody",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("EnumConst"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("EnumConst",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("EnumConst",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("EnumBodyDecs"),V([],[H([],[FBOX(KW,S("\";\""))]),Arg("1")])),PP-Entry(Path("EnumBodyDecs",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("ConstrDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("ConstrDecHead"),[Arg("1"),Arg("2"),Arg("3"),FBOX(KW,S("\"(\"")),Arg("4"),FBOX(KW,S("\")\"")),Arg("5")]),PP-Entry(Path("ConstrDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ConstrDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("ConstrDecHead",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("ConstrDecHead",[selector("4","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("ConstrDecHead",[selector("5","opt")]),[Arg("1")]),PP-Entry(Path1("ConstrBody"),[FBOX(KW,S("\"{\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ConstrBody",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("ConstrBody",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("AltConstrInv"),[Arg("1"),FBOX(KW,S("\"this\"")),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("AltConstrInv",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("AltConstrInv",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("SuperConstrInv"),[Arg("1"),FBOX(KW,S("\"super\"")),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("SuperConstrInv",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("SuperConstrInv",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("QSuperConstrInv"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),FBOX(KW,S("\"super\"")),FBOX(KW,S("\"(\"")),Arg("3"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("QSuperConstrInv",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("QSuperConstrInv",[selector("3","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("StaticInit"),[FBOX(KW,S("\"static\"")),Arg("1")]),PP-Entry(Path1("InstanceInit"),[Arg("1")]),PP-Entry(Path1("Empty"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("Labeled"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("ExprStm"),[Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2"),FBOX(KW,S("\"else\"")),Arg("3")]),PP-Entry(Path1("AssertStm"),[FBOX(KW,S("\"assert\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("AssertStm"),[FBOX(KW,S("\"assert\"")),Arg("1"),FBOX(KW,S("\":\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Switch"),[FBOX(KW,S("\"switch\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("SwitchBlock"),[FBOX(KW,S("\"{\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("SwitchBlock",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("SwitchBlock",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("SwitchGroup"),[Arg("1"),Arg("2")]),PP-Entry(Path("SwitchGroup",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path("SwitchGroup",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Case"),[FBOX(KW,S("\"case\"")),Arg("1"),FBOX(KW,S("\":\""))]),PP-Entry(Path1("Default"),[FBOX(KW,S("\"default\"")),FBOX(KW,S("\":\""))]),PP-Entry(Path1("While"),[FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("DoWhile"),[FBOX(KW,S("\"do\"")),Arg("1"),FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("For"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2"),FBOX(KW,S("\";\"")),Arg("3"),FBOX(KW,S("\")\"")),Arg("4")]),PP-Entry(Path("For",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("For",[selector("3","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("For"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2"),FBOX(KW,S("\";\"")),Arg("3"),FBOX(KW,S("\")\"")),Arg("4")]),PP-Entry(Path("For",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("For",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("For",[selector("3","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ForEach"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\":\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path1("Break"),[FBOX(KW,S("\"break\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Break",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("Continue"),[FBOX(KW,S("\"continue\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Continue",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("Return"),[FBOX(KW,S("\"return\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Return",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("Throw"),[FBOX(KW,S("\"throw\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Synchronized"),[FBOX(KW,S("\"synchronized\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("Try"),[FBOX(KW,S("\"try\"")),Arg("1"),Arg("2")]),PP-Entry(Path("Try",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Try"),[FBOX(KW,S("\"try\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"finally\"")),Arg("3")]),PP-Entry(Path("Try",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("Catch"),[FBOX(KW,S("\"catch\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("LocalVarDecStm"),[Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("LocalVarDec"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("LocalVarDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("LocalVarDec",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("LocalVarDec",[selector("3","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Block"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"{\"")),Arg("1")])],FBOX(KW,S("\"}\""))])),PP-Entry(Path("Block",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("ClassDecStm"),[Arg("1")]),PP-Entry(Path1("MethodDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("MethodDecHead"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6")]),PP-Entry(Path("MethodDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("MethodDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("MethodDecHead",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("MethodDecHead",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("MethodDecHead",[selector("6","opt")]),[Arg("1")]),PP-Entry(Path1("DeprMethodDecHead"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6"),Arg("7")]),PP-Entry(Path("DeprMethodDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("DeprMethodDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("DeprMethodDecHead",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("DeprMethodDecHead",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("DeprMethodDecHead",[selector("6","iter")]),[Arg("1")]),PP-Entry(Path("DeprMethodDecHead",[selector("7","opt")]),[Arg("1")]),PP-Entry(Path1("Void"),[FBOX(KW,S("\"void\""))]),PP-Entry(Path1("Param"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("Param",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("Param",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("VarArityParam"),[Arg("1"),Arg("2"),FBOX(KW,S("\"...\"")),Arg("3")]),PP-Entry(Path("VarArityParam",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("VarArityParam",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("ThrowsDec"),V([],[H([],[FBOX(KW,S("\"throws\""))]),Arg("1")])),PP-Entry(Path("ThrowsDec",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("NoMethodBody"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("ArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Anno"),[FBOX(KW,S("\"@\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("Anno",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("SingleElemAnno"),[FBOX(KW,S("\"@\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("MarkerAnno"),[FBOX(KW,S("\"@\"")),Arg("1")]),PP-Entry(Path1("ElemValPair"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("ElemValArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ElemValArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ElemValArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ElemValArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("FieldDec"),[Arg("1"),Arg("2"),Arg("3"),FBOX(KW,S("\";\""))]),PP-Entry(Path("FieldDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("FieldDec",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("FieldDec",[selector("3","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("VarDec"),[Arg("1")]),PP-Entry(Path1("VarDec"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("ArrayVarDecId"),[Arg("1"),Arg("2")]),PP-Entry(Path("ArrayVarDecId",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Dim"),[FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("ClassDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("ClassBody"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"{\"")),Arg("1")])],FBOX(KW,S("\"}\""))])),PP-Entry(Path("ClassBody",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("ClassDecHead"),[Arg("1"),FBOX(KW,S("\"class\"")),Arg("2"),Arg("3"),Arg("4"),Arg("5")]),PP-Entry(Path("ClassDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ClassDecHead",[selector("1","iter-star"),selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("ClassDecHead",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path("ClassDecHead",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path("ClassDecHead",[selector("5","opt")]),[Arg("1")]),PP-Entry(Path1("SuperDec"),[FBOX(KW,S("\"extends\"")),Arg("1")]),PP-Entry(Path1("ImplementsDec"),V([],[H([],[FBOX(KW,S("\"implements\""))]),Arg("1")])),PP-Entry(Path("ImplementsDec",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("CompilationUnit"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("CompilationUnit",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("CompilationUnit",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("CompilationUnit",[selector("3","iter")]),[Arg("1")]),PP-Entry(Path1("PackageName"),[Arg("1")]),PP-Entry(Path("PackageName",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\".\""))]),PP-Entry(Path1("AmbName"),[Arg("1")]),PP-Entry(Path1("AmbName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("TypeName"),[Arg("1")]),PP-Entry(Path1("TypeName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("ExprName"),[Arg("1")]),PP-Entry(Path1("ExprName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("MethodName"),[Arg("1")]),PP-Entry(Path1("MethodName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("PackageOrTypeName"),[Arg("1")]),PP-Entry(Path1("PackageOrTypeName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("TypeArgs"),[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\">\""))]),PP-Entry(Path("TypeArgs",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Wildcard"),[FBOX(KW,S("\"?\"")),Arg("1")]),PP-Entry(Path("Wildcard",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("WildcardUpperBound"),[FBOX(KW,S("\"extends\"")),Arg("1")]),PP-Entry(Path1("WildcardLowerBound"),[FBOX(KW,S("\"super\"")),Arg("1")]),PP-Entry(Path1("TypeParam"),[Arg("1"),Arg("2")]),PP-Entry(Path("TypeParam",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("TypeBound"),V([],[H([],[FBOX(KW,S("\"extends\""))]),Arg("1")])),PP-Entry(Path("TypeBound",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\"&\""))]),PP-Entry(Path1("TypeParams"),[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\">\""))]),PP-Entry(Path("TypeParams",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ClassOrInterfaceType"),[Arg("1"),Arg("2")]),PP-Entry(Path("ClassOrInterfaceType",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("ClassType"),[Arg("1"),Arg("2")]),PP-Entry(Path("ClassType",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("InterfaceType"),[Arg("1"),Arg("2")]),PP-Entry(Path("InterfaceType",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path1("Member"),[Arg("1"),Arg("2"),FBOX(KW,S("\".\"")),Arg("3")]),PP-Entry(Path1("TypeVar"),[Arg("1")]),PP-Entry(Path1("ArrayType"),[Arg("1"),FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("Boolean"),[FBOX(KW,S("\"boolean\""))]),PP-Entry(Path1("Byte"),[FBOX(KW,S("\"byte\""))]),PP-Entry(Path1("Short"),[FBOX(KW,S("\"short\""))]),PP-Entry(Path1("Int"),[FBOX(KW,S("\"int\""))]),PP-Entry(Path1("Long"),[FBOX(KW,S("\"long\""))]),PP-Entry(Path1("Char"),[FBOX(KW,S("\"char\""))]),PP-Entry(Path1("Float"),[FBOX(KW,S("\"float\""))]),PP-Entry(Path1("Double"),[FBOX(KW,S("\"double\""))]),PP-Entry(Path1("Null"),[FBOX(KW,S("\"null\""))]),PP-Entry(Path1("String"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"\\\"\"")),Arg("1")])],FBOX(KW,S("\"\\\"\""))])),PP-Entry(Path("String",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("Chars"),[Arg("1")]),PP-Entry(Path1("Bool"),[Arg("1")]),PP-Entry(Path1("True"),[FBOX(KW,S("\"true\""))]),PP-Entry(Path1("False"),[FBOX(KW,S("\"false\""))]),PP-Entry(Path1("Float"),[Arg("1")]),PP-Entry(Path1("Float"),[Arg("1")]),PP-Entry(Path1("Deci"),[Arg("1")]),PP-Entry(Path1("Hexa"),[Arg("1")]),PP-Entry(Path1("Octa"),[Arg("1")]),PP-Entry(Path1("Public"),[FBOX(KW,S("\"public\""))]),PP-Entry(Path1("Private"),[FBOX(KW,S("\"private\""))]),PP-Entry(Path1("Protected"),[FBOX(KW,S("\"protected\""))]),PP-Entry(Path1("Abstract"),[FBOX(KW,S("\"abstract\""))]),PP-Entry(Path1("Final"),[FBOX(KW,S("\"final\""))]),PP-Entry(Path1("Static"),[FBOX(KW,S("\"static\""))]),PP-Entry(Path1("Native"),[FBOX(KW,S("\"native\""))]),PP-Entry(Path1("Transient"),[FBOX(KW,S("\"transient\""))]),PP-Entry(Path1("Volatile"),[FBOX(KW,S("\"volatile\""))]),PP-Entry(Path1("Synchronized"),[FBOX(KW,S("\"synchronized\""))]),PP-Entry(Path1("StrictFP"),[FBOX(KW,S("\"strictfp\""))]),PP-Entry(Path1("Id"),[Arg("1")])])