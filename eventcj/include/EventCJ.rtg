
regular tree grammar
  start DirectorDecl LayerDecl TypeName TypeVar TypeDec Type Stm PackageName Literal InterfaceMemberDec InterfaceDec Id FormalParam Expr CompilationUnit ClassMemberDec ClassBodyDec BlockStm Block AnnoDec Anno
  productions
    OptTypeArgs2                                      -> <some>(TypeArgs)
    OptTypeArgs2                                      -> <none>()
    OptClassBody0                                     -> <some>(ClassBody)
    OptClassBody0                                     -> <none>()
    ListStarOfExpr0                                   -> ListPlusOfExpr0
    ListStarOfExpr0                                   -> <nil>()
    ListStarOfExpr0                                   -> <conc>(ListStarOfExpr0,ListStarOfExpr0)
    ListPlusOfExpr0                                   -> <conc>(ListStarOfExpr0,ListPlusOfExpr0)
    ListPlusOfExpr0                                   -> <conc>(ListPlusOfExpr0,ListStarOfExpr0)
    ListPlusOfExpr0                                   -> <conc>(ListPlusOfExpr0,ListPlusOfExpr0)
    ListPlusOfExpr0                                   -> <cons>(Expr,ListStarOfExpr0)
    OptThrows1                                        -> <some>(Throws)
    OptThrows1                                        -> <none>()
    ListStarOfFormalParam0                            -> ListPlusOfFormalParam0
    ListStarOfFormalParam0                            -> <nil>()
    ListStarOfFormalParam0                            -> <conc>(ListStarOfFormalParam0,ListStarOfFormalParam0)
    ListPlusOfFormalParam0                            -> <conc>(ListStarOfFormalParam0,ListPlusOfFormalParam0)
    ListPlusOfFormalParam0                            -> <conc>(ListPlusOfFormalParam0,ListStarOfFormalParam0)
    ListPlusOfFormalParam0                            -> <conc>(ListPlusOfFormalParam0,ListPlusOfFormalParam0)
    ListPlusOfFormalParam0                            -> <cons>(FormalParam,ListStarOfFormalParam0)
    OptTypeParams1                                    -> <some>(TypeParams)
    OptTypeParams1                                    -> <none>()
    ListStarOfLayerMemberDec0                         -> ListPlusOfLayerMemberDec0
    ListStarOfLayerMemberDec0                         -> <nil>()
    ListStarOfLayerMemberDec0                         -> <conc>(ListStarOfLayerMemberDec0,ListStarOfLayerMemberDec0)
    ListPlusOfLayerMemberDec0                         -> <conc>(ListStarOfLayerMemberDec0,ListPlusOfLayerMemberDec0)
    ListPlusOfLayerMemberDec0                         -> <conc>(ListPlusOfLayerMemberDec0,ListStarOfLayerMemberDec0)
    ListPlusOfLayerMemberDec0                         -> <conc>(ListPlusOfLayerMemberDec0,ListPlusOfLayerMemberDec0)
    ListPlusOfLayerMemberDec0                         -> <cons>(LayerMemberDec,ListStarOfLayerMemberDec0)
    OptSender1                                        -> <some>(Sender)
    OptSender1                                        -> <none>()
    ListStarOfDirectionBody0                          -> ListPlusOfDirectionBody0
    ListStarOfDirectionBody0                          -> <nil>()
    ListStarOfDirectionBody0                          -> <conc>(ListStarOfDirectionBody0,ListStarOfDirectionBody0)
    ListPlusOfDirectionBody0                          -> <conc>(ListStarOfDirectionBody0,ListPlusOfDirectionBody0)
    ListPlusOfDirectionBody0                          -> <conc>(ListPlusOfDirectionBody0,ListStarOfDirectionBody0)
    ListPlusOfDirectionBody0                          -> <conc>(ListPlusOfDirectionBody0,ListPlusOfDirectionBody0)
    ListPlusOfDirectionBody0                          -> <cons>(DirectionBody,ListStarOfDirectionBody0)
    ListStarOfExceptionPattern0                       -> ListPlusOfExceptionPattern0
    ListStarOfExceptionPattern0                       -> <nil>()
    ListStarOfExceptionPattern0                       -> <conc>(ListStarOfExceptionPattern0,ListStarOfExceptionPattern0)
    ListPlusOfExceptionPattern0                       -> <conc>(ListStarOfExceptionPattern0,ListPlusOfExceptionPattern0)
    ListPlusOfExceptionPattern0                       -> <conc>(ListPlusOfExceptionPattern0,ListStarOfExceptionPattern0)
    ListPlusOfExceptionPattern0                       -> <conc>(ListPlusOfExceptionPattern0,ListPlusOfExceptionPattern0)
    ListPlusOfExceptionPattern0                       -> <cons>(ExceptionPattern,ListStarOfExceptionPattern0)
    FieldMod_NotFieldMod0                             -> NotFieldMod
    FieldMod_NotFieldMod0                             -> FieldMod
    ListStarOfFieldMod_NotFieldMod0                   -> ListPlusOfFieldMod_NotFieldMod0
    ListStarOfFieldMod_NotFieldMod0                   -> <nil>()
    ListStarOfFieldMod_NotFieldMod0                   -> <conc>(ListStarOfFieldMod_NotFieldMod0,ListStarOfFieldMod_NotFieldMod0)
    ListPlusOfFieldMod_NotFieldMod0                   -> <conc>(ListStarOfFieldMod_NotFieldMod0,ListPlusOfFieldMod_NotFieldMod0)
    ListPlusOfFieldMod_NotFieldMod0                   -> <conc>(ListPlusOfFieldMod_NotFieldMod0,ListStarOfFieldMod_NotFieldMod0)
    ListPlusOfFieldMod_NotFieldMod0                   -> <conc>(ListPlusOfFieldMod_NotFieldMod0,ListPlusOfFieldMod_NotFieldMod0)
    ListPlusOfFieldMod_NotFieldMod0                   -> <cons>(FieldMod_NotFieldMod0,ListStarOfFieldMod_NotFieldMod0)
    ConstrMod_NotConstrMod0                           -> NotConstrMod
    ConstrMod_NotConstrMod0                           -> ConstrMod
    ListStarOfConstrMod_NotConstrMod0                 -> ListPlusOfConstrMod_NotConstrMod0
    ListStarOfConstrMod_NotConstrMod0                 -> <nil>()
    ListStarOfConstrMod_NotConstrMod0                 -> <conc>(ListStarOfConstrMod_NotConstrMod0,ListStarOfConstrMod_NotConstrMod0)
    ListPlusOfConstrMod_NotConstrMod0                 -> <conc>(ListStarOfConstrMod_NotConstrMod0,ListPlusOfConstrMod_NotConstrMod0)
    ListPlusOfConstrMod_NotConstrMod0                 -> <conc>(ListPlusOfConstrMod_NotConstrMod0,ListStarOfConstrMod_NotConstrMod0)
    ListPlusOfConstrMod_NotConstrMod0                 -> <conc>(ListPlusOfConstrMod_NotConstrMod0,ListPlusOfConstrMod_NotConstrMod0)
    ListPlusOfConstrMod_NotConstrMod0                 -> <cons>(ConstrMod_NotConstrMod0,ListStarOfConstrMod_NotConstrMod0)
    MethodMod_NotMethodMod0                           -> NotMethodMod
    MethodMod_NotMethodMod0                           -> MethodMod
    ListStarOfMethodMod_NotMethodMod0                 -> ListPlusOfMethodMod_NotMethodMod0
    ListStarOfMethodMod_NotMethodMod0                 -> <nil>()
    ListStarOfMethodMod_NotMethodMod0                 -> <conc>(ListStarOfMethodMod_NotMethodMod0,ListStarOfMethodMod_NotMethodMod0)
    ListPlusOfMethodMod_NotMethodMod0                 -> <conc>(ListStarOfMethodMod_NotMethodMod0,ListPlusOfMethodMod_NotMethodMod0)
    ListPlusOfMethodMod_NotMethodMod0                 -> <conc>(ListPlusOfMethodMod_NotMethodMod0,ListStarOfMethodMod_NotMethodMod0)
    ListPlusOfMethodMod_NotMethodMod0                 -> <conc>(ListPlusOfMethodMod_NotMethodMod0,ListPlusOfMethodMod_NotMethodMod0)
    ListPlusOfMethodMod_NotMethodMod0                 -> <cons>(MethodMod_NotMethodMod0,ListStarOfMethodMod_NotMethodMod0)
    OptThrowsPattern1                                 -> <some>(ThrowsPattern)
    OptThrowsPattern1                                 -> <none>()
    ListStarOfFormalPattern0                          -> ListPlusOfFormalPattern0
    ListStarOfFormalPattern0                          -> <nil>()
    ListStarOfFormalPattern0                          -> <conc>(ListStarOfFormalPattern0,ListStarOfFormalPattern0)
    ListPlusOfFormalPattern0                          -> <conc>(ListStarOfFormalPattern0,ListPlusOfFormalPattern0)
    ListPlusOfFormalPattern0                          -> <conc>(ListPlusOfFormalPattern0,ListStarOfFormalPattern0)
    ListPlusOfFormalPattern0                          -> <conc>(ListPlusOfFormalPattern0,ListPlusOfFormalPattern0)
    ListPlusOfFormalPattern0                          -> <cons>(FormalPattern,ListStarOfFormalPattern0)
    ListStarOfTypePattern0                            -> ListPlusOfTypePattern0
    ListStarOfTypePattern0                            -> <nil>()
    ListStarOfTypePattern0                            -> <conc>(ListStarOfTypePattern0,ListStarOfTypePattern0)
    ListPlusOfTypePattern0                            -> <conc>(ListStarOfTypePattern0,ListPlusOfTypePattern0)
    ListPlusOfTypePattern0                            -> <conc>(ListPlusOfTypePattern0,ListStarOfTypePattern0)
    ListPlusOfTypePattern0                            -> <conc>(ListPlusOfTypePattern0,ListPlusOfTypePattern0)
    ListPlusOfTypePattern0                            -> <cons>(TypePattern,ListStarOfTypePattern0)
    ListStarOfTypeParamPattern0                       -> ListPlusOfTypeParamPattern0
    ListStarOfTypeParamPattern0                       -> <nil>()
    ListStarOfTypeParamPattern0                       -> <conc>(ListStarOfTypeParamPattern0,ListStarOfTypeParamPattern0)
    ListPlusOfTypeParamPattern0                       -> <conc>(ListStarOfTypeParamPattern0,ListPlusOfTypeParamPattern0)
    ListPlusOfTypeParamPattern0                       -> <conc>(ListPlusOfTypeParamPattern0,ListStarOfTypeParamPattern0)
    ListPlusOfTypeParamPattern0                       -> <conc>(ListPlusOfTypeParamPattern0,ListPlusOfTypeParamPattern0)
    ListPlusOfTypeParamPattern0                       -> <cons>(TypeParamPattern,ListStarOfTypeParamPattern0)
    OptTypeBoundPattern0                              -> <some>(TypeBoundPattern)
    OptTypeBoundPattern0                              -> <none>()
    SimpleAnnoPattern_NotSimpleAnnoPattern0           -> NotSimpleAnnoPattern
    SimpleAnnoPattern_NotSimpleAnnoPattern0           -> SimpleAnnoPattern
    ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0
    ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> <nil>()
    ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> <conc>(ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0,ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> <conc>(ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0,ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> <conc>(ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0,ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> <conc>(ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0,ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0 -> <cons>(SimpleAnnoPattern_NotSimpleAnnoPattern0,ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    ListStarOfTypeDec0                                -> ListPlusOfTypeDec0
    ListStarOfTypeDec0                                -> <nil>()
    ListStarOfTypeDec0                                -> <conc>(ListStarOfTypeDec0,ListStarOfTypeDec0)
    ListPlusOfTypeDec0                                -> <conc>(ListStarOfTypeDec0,ListPlusOfTypeDec0)
    ListPlusOfTypeDec0                                -> <conc>(ListPlusOfTypeDec0,ListStarOfTypeDec0)
    ListPlusOfTypeDec0                                -> <conc>(ListPlusOfTypeDec0,ListPlusOfTypeDec0)
    ListPlusOfTypeDec0                                -> <cons>(TypeDec,ListStarOfTypeDec0)
    ListStarOfImportDec0                              -> ListPlusOfImportDec0
    ListStarOfImportDec0                              -> <nil>()
    ListStarOfImportDec0                              -> <conc>(ListStarOfImportDec0,ListStarOfImportDec0)
    ListPlusOfImportDec0                              -> <conc>(ListStarOfImportDec0,ListPlusOfImportDec0)
    ListPlusOfImportDec0                              -> <conc>(ListPlusOfImportDec0,ListStarOfImportDec0)
    ListPlusOfImportDec0                              -> <conc>(ListPlusOfImportDec0,ListPlusOfImportDec0)
    ListPlusOfImportDec0                              -> <cons>(ImportDec,ListStarOfImportDec0)
    OptPackageDec0                                    -> <some>(PackageDec)
    OptPackageDec0                                    -> <none>()
    ListStarOfAnno0                                   -> ListPlusOfAnno0
    ListStarOfAnno0                                   -> <nil>()
    ListStarOfAnno0                                   -> <conc>(ListStarOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0                                   -> <conc>(ListStarOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0                                   -> <conc>(ListPlusOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0                                   -> <conc>(ListPlusOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0                                   -> <cons>(Anno,ListStarOfAnno0)
    ListStarOfElemVal0                                -> ListPlusOfElemVal0
    ListStarOfElemVal0                                -> <nil>()
    ListStarOfElemVal0                                -> <conc>(ListStarOfElemVal0,ListStarOfElemVal0)
    ListPlusOfElemVal0                                -> <conc>(ListStarOfElemVal0,ListPlusOfElemVal0)
    ListPlusOfElemVal0                                -> <conc>(ListPlusOfElemVal0,ListStarOfElemVal0)
    ListPlusOfElemVal0                                -> <conc>(ListPlusOfElemVal0,ListPlusOfElemVal0)
    ListPlusOfElemVal0                                -> <cons>(ElemVal,ListStarOfElemVal0)
    ListStarOfElemValPair0                            -> ListPlusOfElemValPair0
    ListStarOfElemValPair0                            -> <nil>()
    ListStarOfElemValPair0                            -> <conc>(ListStarOfElemValPair0,ListStarOfElemValPair0)
    ListPlusOfElemValPair0                            -> <conc>(ListStarOfElemValPair0,ListPlusOfElemValPair0)
    ListPlusOfElemValPair0                            -> <conc>(ListPlusOfElemValPair0,ListStarOfElemValPair0)
    ListPlusOfElemValPair0                            -> <conc>(ListPlusOfElemValPair0,ListPlusOfElemValPair0)
    ListPlusOfElemValPair0                            -> <cons>(ElemValPair,ListStarOfElemValPair0)
    OptTypeArgs2                                      -> TypeArgs
    ListStarOfDim0                                    -> ListPlusOfDim0
    ListStarOfDim0                                    -> <nil>()
    ListStarOfDim0                                    -> <conc>(ListStarOfDim0,ListStarOfDim0)
    ListPlusOfDim0                                    -> <conc>(ListStarOfDim0,ListPlusOfDim0)
    ListPlusOfDim0                                    -> <conc>(ListPlusOfDim0,ListStarOfDim0)
    ListPlusOfDim0                                    -> <conc>(ListPlusOfDim0,ListPlusOfDim0)
    ListPlusOfDim0                                    -> <cons>(Dim,ListStarOfDim0)
    ListStarOfDimExpr0                                -> ListPlusOfDimExpr0
    ListStarOfDimExpr0                                -> <nil>()
    ListStarOfDimExpr0                                -> <conc>(ListStarOfDimExpr0,ListStarOfDimExpr0)
    ListPlusOfDimExpr0                                -> <conc>(ListStarOfDimExpr0,ListPlusOfDimExpr0)
    ListPlusOfDimExpr0                                -> <conc>(ListPlusOfDimExpr0,ListStarOfDimExpr0)
    ListPlusOfDimExpr0                                -> <conc>(ListPlusOfDimExpr0,ListPlusOfDimExpr0)
    ListPlusOfDimExpr0                                -> <cons>(DimExpr,ListStarOfDimExpr0)
    ListStarOfInterfaceType0                          -> ListPlusOfInterfaceType0
    ListStarOfInterfaceType0                          -> <nil>()
    ListStarOfInterfaceType0                          -> <conc>(ListStarOfInterfaceType0,ListStarOfInterfaceType0)
    ListPlusOfInterfaceType0                          -> <conc>(ListStarOfInterfaceType0,ListPlusOfInterfaceType0)
    ListPlusOfInterfaceType0                          -> <conc>(ListPlusOfInterfaceType0,ListStarOfInterfaceType0)
    ListPlusOfInterfaceType0                          -> <conc>(ListPlusOfInterfaceType0,ListPlusOfInterfaceType0)
    ListPlusOfInterfaceType0                          -> <cons>(InterfaceType,ListStarOfInterfaceType0)
    OptInterfaces1                                    -> <some>(Interfaces)
    OptInterfaces1                                    -> <none>()
    OptSuper0                                         -> <some>(Super)
    OptSuper0                                         -> <none>()
    Anno_ClassMod1                                    -> ClassMod
    Anno_ClassMod1                                    -> Anno
    ListStarOfAnno_ClassMod0                          -> ListPlusOfAnno_ClassMod0
    ListStarOfAnno_ClassMod0                          -> <nil>()
    ListStarOfAnno_ClassMod0                          -> <conc>(ListStarOfAnno_ClassMod0,ListStarOfAnno_ClassMod0)
    ListPlusOfAnno_ClassMod0                          -> <conc>(ListStarOfAnno_ClassMod0,ListPlusOfAnno_ClassMod0)
    ListPlusOfAnno_ClassMod0                          -> <conc>(ListPlusOfAnno_ClassMod0,ListStarOfAnno_ClassMod0)
    ListPlusOfAnno_ClassMod0                          -> <conc>(ListPlusOfAnno_ClassMod0,ListPlusOfAnno_ClassMod0)
    ListPlusOfAnno_ClassMod0                          -> <cons>(Anno_ClassMod1,ListStarOfAnno_ClassMod0)
    ListStarOfClassBodyDec0                           -> ListPlusOfClassBodyDec0
    ListStarOfClassBodyDec0                           -> <nil>()
    ListStarOfClassBodyDec0                           -> <conc>(ListStarOfClassBodyDec0,ListStarOfClassBodyDec0)
    ListPlusOfClassBodyDec0                           -> <conc>(ListStarOfClassBodyDec0,ListPlusOfClassBodyDec0)
    ListPlusOfClassBodyDec0                           -> <conc>(ListPlusOfClassBodyDec0,ListStarOfClassBodyDec0)
    ListPlusOfClassBodyDec0                           -> <conc>(ListPlusOfClassBodyDec0,ListPlusOfClassBodyDec0)
    ListPlusOfClassBodyDec0                           -> <cons>(ClassBodyDec,ListStarOfClassBodyDec0)
    OptExtendsInterfaces1                             -> <some>(ExtendsInterfaces)
    OptExtendsInterfaces1                             -> <none>()
    Anno_InterfaceMod1                                -> InterfaceMod
    Anno_InterfaceMod1                                -> Anno
    ListStarOfAnno_InterfaceMod0                      -> ListPlusOfAnno_InterfaceMod0
    ListStarOfAnno_InterfaceMod0                      -> <nil>()
    ListStarOfAnno_InterfaceMod0                      -> <conc>(ListStarOfAnno_InterfaceMod0,ListStarOfAnno_InterfaceMod0)
    ListPlusOfAnno_InterfaceMod0                      -> <conc>(ListStarOfAnno_InterfaceMod0,ListPlusOfAnno_InterfaceMod0)
    ListPlusOfAnno_InterfaceMod0                      -> <conc>(ListPlusOfAnno_InterfaceMod0,ListStarOfAnno_InterfaceMod0)
    ListPlusOfAnno_InterfaceMod0                      -> <conc>(ListPlusOfAnno_InterfaceMod0,ListPlusOfAnno_InterfaceMod0)
    ListPlusOfAnno_InterfaceMod0                      -> <cons>(Anno_InterfaceMod1,ListStarOfAnno_InterfaceMod0)
    ListStarOfInterfaceMemberDec0                     -> ListPlusOfInterfaceMemberDec0
    ListStarOfInterfaceMemberDec0                     -> <nil>()
    ListStarOfInterfaceMemberDec0                     -> <conc>(ListStarOfInterfaceMemberDec0,ListStarOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0                     -> <conc>(ListStarOfInterfaceMemberDec0,ListPlusOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0                     -> <conc>(ListPlusOfInterfaceMemberDec0,ListStarOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0                     -> <conc>(ListPlusOfInterfaceMemberDec0,ListPlusOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0                     -> <cons>(InterfaceMemberDec,ListStarOfInterfaceMemberDec0)
    OptDefaultVal0                                    -> <some>(DefaultVal)
    OptDefaultVal0                                    -> <none>()
    ListStarOfAbstractMethodMod0                      -> ListPlusOfAbstractMethodMod0
    ListStarOfAbstractMethodMod0                      -> <nil>()
    ListStarOfAbstractMethodMod0                      -> <conc>(ListStarOfAbstractMethodMod0,ListStarOfAbstractMethodMod0)
    ListPlusOfAbstractMethodMod0                      -> <conc>(ListStarOfAbstractMethodMod0,ListPlusOfAbstractMethodMod0)
    ListPlusOfAbstractMethodMod0                      -> <conc>(ListPlusOfAbstractMethodMod0,ListStarOfAbstractMethodMod0)
    ListPlusOfAbstractMethodMod0                      -> <conc>(ListPlusOfAbstractMethodMod0,ListPlusOfAbstractMethodMod0)
    ListPlusOfAbstractMethodMod0                      -> <cons>(AbstractMethodMod,ListStarOfAbstractMethodMod0)
    ListStarOfAnnoElemDec0                            -> ListPlusOfAnnoElemDec0
    ListStarOfAnnoElemDec0                            -> <nil>()
    ListStarOfAnnoElemDec0                            -> <conc>(ListStarOfAnnoElemDec0,ListStarOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0                            -> <conc>(ListStarOfAnnoElemDec0,ListPlusOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0                            -> <conc>(ListPlusOfAnnoElemDec0,ListStarOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0                            -> <conc>(ListPlusOfAnnoElemDec0,ListPlusOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0                            -> <cons>(AnnoElemDec,ListStarOfAnnoElemDec0)
    Anno_AbstractMethodMod1                           -> AbstractMethodMod
    Anno_AbstractMethodMod1                           -> Anno
    ListStarOfAnno_AbstractMethodMod0                 -> ListPlusOfAnno_AbstractMethodMod0
    ListStarOfAnno_AbstractMethodMod0                 -> <nil>()
    ListStarOfAnno_AbstractMethodMod0                 -> <conc>(ListStarOfAnno_AbstractMethodMod0,ListStarOfAnno_AbstractMethodMod0)
    ListPlusOfAnno_AbstractMethodMod0                 -> <conc>(ListStarOfAnno_AbstractMethodMod0,ListPlusOfAnno_AbstractMethodMod0)
    ListPlusOfAnno_AbstractMethodMod0                 -> <conc>(ListPlusOfAnno_AbstractMethodMod0,ListStarOfAnno_AbstractMethodMod0)
    ListPlusOfAnno_AbstractMethodMod0                 -> <conc>(ListPlusOfAnno_AbstractMethodMod0,ListPlusOfAnno_AbstractMethodMod0)
    ListPlusOfAnno_AbstractMethodMod0                 -> <cons>(Anno_AbstractMethodMod1,ListStarOfAnno_AbstractMethodMod0)
    ListStarOfVarDec0                                 -> ListPlusOfVarDec0
    ListStarOfVarDec0                                 -> <nil>()
    ListStarOfVarDec0                                 -> <conc>(ListStarOfVarDec0,ListStarOfVarDec0)
    ListPlusOfVarDec0                                 -> <conc>(ListStarOfVarDec0,ListPlusOfVarDec0)
    ListPlusOfVarDec0                                 -> <conc>(ListPlusOfVarDec0,ListStarOfVarDec0)
    ListPlusOfVarDec0                                 -> <conc>(ListPlusOfVarDec0,ListPlusOfVarDec0)
    ListPlusOfVarDec0                                 -> <cons>(VarDec,ListStarOfVarDec0)
    Anno_ConstantMod1                                 -> ConstantMod
    Anno_ConstantMod1                                 -> Anno
    ListStarOfAnno_ConstantMod0                       -> ListPlusOfAnno_ConstantMod0
    ListStarOfAnno_ConstantMod0                       -> <nil>()
    ListStarOfAnno_ConstantMod0                       -> <conc>(ListStarOfAnno_ConstantMod0,ListStarOfAnno_ConstantMod0)
    ListPlusOfAnno_ConstantMod0                       -> <conc>(ListStarOfAnno_ConstantMod0,ListPlusOfAnno_ConstantMod0)
    ListPlusOfAnno_ConstantMod0                       -> <conc>(ListPlusOfAnno_ConstantMod0,ListStarOfAnno_ConstantMod0)
    ListPlusOfAnno_ConstantMod0                       -> <conc>(ListPlusOfAnno_ConstantMod0,ListPlusOfAnno_ConstantMod0)
    ListPlusOfAnno_ConstantMod0                       -> <cons>(Anno_ConstantMod1,ListStarOfAnno_ConstantMod0)
    OptEnumConstArgs0                                 -> <some>(EnumConstArgs)
    OptEnumConstArgs0                                 -> <none>()
    OptEnumBodyDecs0                                  -> <some>(EnumBodyDecs)
    OptEnumBodyDecs0                                  -> <none>()
    ListStarOfEnumConst0                              -> ListPlusOfEnumConst0
    ListStarOfEnumConst0                              -> <nil>()
    ListStarOfEnumConst0                              -> <conc>(ListStarOfEnumConst0,ListStarOfEnumConst0)
    ListPlusOfEnumConst0                              -> <conc>(ListStarOfEnumConst0,ListPlusOfEnumConst0)
    ListPlusOfEnumConst0                              -> <conc>(ListPlusOfEnumConst0,ListStarOfEnumConst0)
    ListPlusOfEnumConst0                              -> <conc>(ListPlusOfEnumConst0,ListPlusOfEnumConst0)
    ListPlusOfEnumConst0                              -> <cons>(EnumConst,ListStarOfEnumConst0)
    OptConstrInv0                                     -> <some>(ConstrInv)
    OptConstrInv0                                     -> <none>()
    Anno_ConstrMod1                                   -> ConstrMod
    Anno_ConstrMod1                                   -> Anno
    ListStarOfAnno_ConstrMod0                         -> ListPlusOfAnno_ConstrMod0
    ListStarOfAnno_ConstrMod0                         -> <nil>()
    ListStarOfAnno_ConstrMod0                         -> <conc>(ListStarOfAnno_ConstrMod0,ListStarOfAnno_ConstrMod0)
    ListPlusOfAnno_ConstrMod0                         -> <conc>(ListStarOfAnno_ConstrMod0,ListPlusOfAnno_ConstrMod0)
    ListPlusOfAnno_ConstrMod0                         -> <conc>(ListPlusOfAnno_ConstrMod0,ListStarOfAnno_ConstrMod0)
    ListPlusOfAnno_ConstrMod0                         -> <conc>(ListPlusOfAnno_ConstrMod0,ListPlusOfAnno_ConstrMod0)
    ListPlusOfAnno_ConstrMod0                         -> <cons>(Anno_ConstrMod1,ListStarOfAnno_ConstrMod0)
    ListStarOfExceptionType0                          -> ListPlusOfExceptionType0
    ListStarOfExceptionType0                          -> <nil>()
    ListStarOfExceptionType0                          -> <conc>(ListStarOfExceptionType0,ListStarOfExceptionType0)
    ListPlusOfExceptionType0                          -> <conc>(ListStarOfExceptionType0,ListPlusOfExceptionType0)
    ListPlusOfExceptionType0                          -> <conc>(ListPlusOfExceptionType0,ListStarOfExceptionType0)
    ListPlusOfExceptionType0                          -> <conc>(ListPlusOfExceptionType0,ListPlusOfExceptionType0)
    ListPlusOfExceptionType0                          -> <cons>(ExceptionType,ListStarOfExceptionType0)
    Anno_VarMod1                                      -> VarMod
    Anno_VarMod1                                      -> Anno
    ListStarOfAnno_VarMod0                            -> ListPlusOfAnno_VarMod0
    ListStarOfAnno_VarMod0                            -> <nil>()
    ListStarOfAnno_VarMod0                            -> <conc>(ListStarOfAnno_VarMod0,ListStarOfAnno_VarMod0)
    ListPlusOfAnno_VarMod0                            -> <conc>(ListStarOfAnno_VarMod0,ListPlusOfAnno_VarMod0)
    ListPlusOfAnno_VarMod0                            -> <conc>(ListPlusOfAnno_VarMod0,ListStarOfAnno_VarMod0)
    ListPlusOfAnno_VarMod0                            -> <conc>(ListPlusOfAnno_VarMod0,ListPlusOfAnno_VarMod0)
    ListPlusOfAnno_VarMod0                            -> <cons>(Anno_VarMod1,ListStarOfAnno_VarMod0)
    Anno_MethodMod1                                   -> MethodMod
    Anno_MethodMod1                                   -> Anno
    ListStarOfAnno_MethodMod0                         -> ListPlusOfAnno_MethodMod0
    ListStarOfAnno_MethodMod0                         -> <nil>()
    ListStarOfAnno_MethodMod0                         -> <conc>(ListStarOfAnno_MethodMod0,ListStarOfAnno_MethodMod0)
    ListPlusOfAnno_MethodMod0                         -> <conc>(ListStarOfAnno_MethodMod0,ListPlusOfAnno_MethodMod0)
    ListPlusOfAnno_MethodMod0                         -> <conc>(ListPlusOfAnno_MethodMod0,ListStarOfAnno_MethodMod0)
    ListPlusOfAnno_MethodMod0                         -> <conc>(ListPlusOfAnno_MethodMod0,ListPlusOfAnno_MethodMod0)
    ListPlusOfAnno_MethodMod0                         -> <cons>(Anno_MethodMod1,ListStarOfAnno_MethodMod0)
    ListStarOfCatchClause0                            -> ListPlusOfCatchClause0
    ListStarOfCatchClause0                            -> <nil>()
    ListStarOfCatchClause0                            -> <conc>(ListStarOfCatchClause0,ListStarOfCatchClause0)
    ListPlusOfCatchClause0                            -> <conc>(ListStarOfCatchClause0,ListPlusOfCatchClause0)
    ListPlusOfCatchClause0                            -> <conc>(ListPlusOfCatchClause0,ListStarOfCatchClause0)
    ListPlusOfCatchClause0                            -> <conc>(ListPlusOfCatchClause0,ListPlusOfCatchClause0)
    ListPlusOfCatchClause0                            -> <cons>(CatchClause,ListStarOfCatchClause0)
    OptExpr0                                          -> <some>(Expr)
    OptExpr0                                          -> <none>()
    OptId0                                            -> <some>(Id)
    OptId0                                            -> <none>()
    ListStarOfBlockStm0                               -> ListPlusOfBlockStm0
    ListStarOfBlockStm0                               -> <nil>()
    ListStarOfBlockStm0                               -> <conc>(ListStarOfBlockStm0,ListStarOfBlockStm0)
    ListPlusOfBlockStm0                               -> <conc>(ListStarOfBlockStm0,ListPlusOfBlockStm0)
    ListPlusOfBlockStm0                               -> <conc>(ListPlusOfBlockStm0,ListStarOfBlockStm0)
    ListPlusOfBlockStm0                               -> <conc>(ListPlusOfBlockStm0,ListPlusOfBlockStm0)
    ListPlusOfBlockStm0                               -> <cons>(BlockStm,ListStarOfBlockStm0)
    ListStarOfSwitchLabel0                            -> ListPlusOfSwitchLabel0
    ListStarOfSwitchLabel0                            -> <nil>()
    ListStarOfSwitchLabel0                            -> <conc>(ListStarOfSwitchLabel0,ListStarOfSwitchLabel0)
    ListPlusOfSwitchLabel0                            -> <conc>(ListStarOfSwitchLabel0,ListPlusOfSwitchLabel0)
    ListPlusOfSwitchLabel0                            -> <conc>(ListPlusOfSwitchLabel0,ListStarOfSwitchLabel0)
    ListPlusOfSwitchLabel0                            -> <conc>(ListPlusOfSwitchLabel0,ListPlusOfSwitchLabel0)
    ListPlusOfSwitchLabel0                            -> <cons>(SwitchLabel,ListStarOfSwitchLabel0)
    ListStarOfSwitchGroup0                            -> ListPlusOfSwitchGroup0
    ListStarOfSwitchGroup0                            -> <nil>()
    ListStarOfSwitchGroup0                            -> <conc>(ListStarOfSwitchGroup0,ListStarOfSwitchGroup0)
    ListPlusOfSwitchGroup0                            -> <conc>(ListStarOfSwitchGroup0,ListPlusOfSwitchGroup0)
    ListPlusOfSwitchGroup0                            -> <conc>(ListPlusOfSwitchGroup0,ListStarOfSwitchGroup0)
    ListPlusOfSwitchGroup0                            -> <conc>(ListPlusOfSwitchGroup0,ListPlusOfSwitchGroup0)
    ListPlusOfSwitchGroup0                            -> <cons>(SwitchGroup,ListStarOfSwitchGroup0)
    Anno_FieldMod1                                    -> FieldMod
    Anno_FieldMod1                                    -> Anno
    ListStarOfAnno_FieldMod0                          -> ListPlusOfAnno_FieldMod0
    ListStarOfAnno_FieldMod0                          -> <nil>()
    ListStarOfAnno_FieldMod0                          -> <conc>(ListStarOfAnno_FieldMod0,ListStarOfAnno_FieldMod0)
    ListPlusOfAnno_FieldMod0                          -> <conc>(ListStarOfAnno_FieldMod0,ListPlusOfAnno_FieldMod0)
    ListPlusOfAnno_FieldMod0                          -> <conc>(ListPlusOfAnno_FieldMod0,ListStarOfAnno_FieldMod0)
    ListPlusOfAnno_FieldMod0                          -> <conc>(ListPlusOfAnno_FieldMod0,ListPlusOfAnno_FieldMod0)
    ListPlusOfAnno_FieldMod0                          -> <cons>(Anno_FieldMod1,ListStarOfAnno_FieldMod0)
    ListStarOfVarInit0                                -> ListPlusOfVarInit0
    ListStarOfVarInit0                                -> <nil>()
    ListStarOfVarInit0                                -> <conc>(ListStarOfVarInit0,ListStarOfVarInit0)
    ListPlusOfVarInit0                                -> <conc>(ListStarOfVarInit0,ListPlusOfVarInit0)
    ListPlusOfVarInit0                                -> <conc>(ListPlusOfVarInit0,ListStarOfVarInit0)
    ListPlusOfVarInit0                                -> <conc>(ListPlusOfVarInit0,ListPlusOfVarInit0)
    ListPlusOfVarInit0                                -> <cons>(VarInit,ListStarOfVarInit0)
    ListStarOfTypeParam0                              -> ListPlusOfTypeParam0
    ListStarOfTypeParam0                              -> <nil>()
    ListStarOfTypeParam0                              -> <conc>(ListStarOfTypeParam0,ListStarOfTypeParam0)
    ListPlusOfTypeParam0                              -> <conc>(ListStarOfTypeParam0,ListPlusOfTypeParam0)
    ListPlusOfTypeParam0                              -> <conc>(ListPlusOfTypeParam0,ListStarOfTypeParam0)
    ListPlusOfTypeParam0                              -> <conc>(ListPlusOfTypeParam0,ListPlusOfTypeParam0)
    ListPlusOfTypeParam0                              -> <cons>(TypeParam,ListStarOfTypeParam0)
    ListStarOfClassOrInterfaceType0                   -> ListPlusOfClassOrInterfaceType0
    ListStarOfClassOrInterfaceType0                   -> <nil>()
    ListStarOfClassOrInterfaceType0                   -> <conc>(ListStarOfClassOrInterfaceType0,ListStarOfClassOrInterfaceType0)
    ListPlusOfClassOrInterfaceType0                   -> <conc>(ListStarOfClassOrInterfaceType0,ListPlusOfClassOrInterfaceType0)
    ListPlusOfClassOrInterfaceType0                   -> <conc>(ListPlusOfClassOrInterfaceType0,ListStarOfClassOrInterfaceType0)
    ListPlusOfClassOrInterfaceType0                   -> <conc>(ListPlusOfClassOrInterfaceType0,ListPlusOfClassOrInterfaceType0)
    ListPlusOfClassOrInterfaceType0                   -> <cons>(ClassOrInterfaceType,ListStarOfClassOrInterfaceType0)
    OptTypeBound1                                     -> <some>(TypeBound)
    OptTypeBound1                                     -> <none>()
    OptWildcardBound0                                 -> <some>(WildcardBound)
    OptWildcardBound0                                 -> <none>()
    ListStarOfActualTypeArg0                          -> ListPlusOfActualTypeArg0
    ListStarOfActualTypeArg0                          -> <nil>()
    ListStarOfActualTypeArg0                          -> <conc>(ListStarOfActualTypeArg0,ListStarOfActualTypeArg0)
    ListPlusOfActualTypeArg0                          -> <conc>(ListStarOfActualTypeArg0,ListPlusOfActualTypeArg0)
    ListPlusOfActualTypeArg0                          -> <conc>(ListPlusOfActualTypeArg0,ListStarOfActualTypeArg0)
    ListPlusOfActualTypeArg0                          -> <conc>(ListPlusOfActualTypeArg0,ListPlusOfActualTypeArg0)
    ListPlusOfActualTypeArg0                          -> <cons>(ActualTypeArg,ListStarOfActualTypeArg0)
    ListStarOfId1                                     -> ListPlusOfId0
    ListStarOfId1                                     -> <nil>()
    ListStarOfId1                                     -> <conc>(ListStarOfId1,ListStarOfId1)
    ListPlusOfId0                                     -> <conc>(ListStarOfId1,ListPlusOfId0)
    ListPlusOfId0                                     -> <conc>(ListPlusOfId0,ListStarOfId1)
    ListPlusOfId0                                     -> <conc>(ListPlusOfId0,ListPlusOfId0)
    ListPlusOfId0                                     -> <cons>(Id,ListStarOfId1)
    ListStarOfStringPart0                             -> ListPlusOfStringPart0
    ListStarOfStringPart0                             -> <nil>()
    ListStarOfStringPart0                             -> <conc>(ListStarOfStringPart0,ListStarOfStringPart0)
    ListPlusOfStringPart0                             -> <conc>(ListStarOfStringPart0,ListPlusOfStringPart0)
    ListPlusOfStringPart0                             -> <conc>(ListPlusOfStringPart0,ListStarOfStringPart0)
    ListPlusOfStringPart0                             -> <conc>(ListPlusOfStringPart0,ListPlusOfStringPart0)
    ListPlusOfStringPart0                             -> <cons>(StringPart,ListStarOfStringPart0)
    OptDeciFloatExponentPart0                         -> <string>
    ListStarOfCommentPart0                            -> <string>
    ListPlusOfCommentPart0                            -> <string>
    ListStarOfCharClass1                              -> ListPlusOfCharClass2
    ListStarOfCharClass1                              -> <nil>()
    ListStarOfCharClass1                              -> <conc>(ListStarOfCharClass1,ListStarOfCharClass1)
    ListPlusOfCharClass2                              -> <conc>(ListStarOfCharClass1,ListPlusOfCharClass2)
    ListPlusOfCharClass2                              -> <conc>(ListPlusOfCharClass2,ListStarOfCharClass1)
    ListPlusOfCharClass2                              -> <conc>(ListPlusOfCharClass2,ListPlusOfCharClass2)
    ListPlusOfCharClass2                              -> <cons>(<int>,ListStarOfCharClass1)
    ClassMemberDec                                    -> LayerDecl
    TypeDec                                           -> DirectorDecl
    ActivationBlock                                   -> Pause(Block)
    ActivationBlock                                   -> Restore(Block)
    ActivationBlock                                   -> Deactivation(Block)
    ActivationBlock                                   -> Activation(Block)
    PartialMethodHead                                 -> PartialMethodHead(OptTypeParams1,TimingSpecifier,ResultType,Id,ListStarOfFormalParam0,OptThrows1)
    PartialMethodDec                                  -> PartialMethodDec(PartialMethodHead,MethodBody)
    MethodSpec                                        -> Proceed()
    LayerMemberDec                                    -> MethodDec
    LayerMemberDec                                    -> FieldDec
    LayerMemberDec                                    -> ActivationBlock
    LayerMemberDec                                    -> PartialMethodDec
    LayerDecl                                         -> Layer(Id,ListStarOfLayerMemberDec0)
    TypeOrIdPattern                                   -> Subtype(Type)
    TypeOrIdPattern                                   -> Type
    TypeOrIdPattern                                   -> DotWildcard()
    TypeOrIdPattern                                   -> Wildcard()
    ActionSelector                                    -> Call(MethodConstrPattern)
    ActionSelector                                    -> Exec(MethodConstrPattern)
    Selector                                          -> ThisSelector(TypeOrIdPattern)
    Selector                                          -> TargetSelector(TypeOrIdPattern)
    Selector                                          -> ActionSelector(TimingSpecifier,ActionSelector)
    NewLayer                                          -> NoLayer()
    NewLayer                                          -> Id
    Guard                                             -> IfNotActive(Guard)
    Guard                                             -> AnnonLayer()
    Guard                                             -> Id
    TransitionRule                                    -> TransitionRuleComposition(TransitionRule,TransitionRule)
    TransitionRule                                    -> ActivateLayer(Guard,Id)
    TransitionRule                                    -> SwitchLayer(Guard,NewLayer)
    TransitionRuleDecl                                -> TransitionRuleDecl(Id,ListStarOfFormalParam0,TransitionRule)
    Sender                                            -> SendTo(Expr)
    EventDecl                                         -> EventDecl(Id,ListStarOfFormalParam0,Selector,OptSender1)
    DirectionBody                                     -> TransitionRuleDecl
    DirectionBody                                     -> EventDecl
    DirectorDecl                                      -> Direction(Id,ListStarOfDirectionBody0)
    Modifier                                          -> TimingSpecifier
    TimingSpecifier                                   -> AroundTiming()
    TimingSpecifier                                   -> BeforeTiming()
    TimingSpecifier                                   -> AfterTiming()
    Selector                                          -> OrComp(Selector,Selector)
    Selector                                          -> AndComp(Selector,Selector)
    Selector                                          -> NotComp(Selector)
    ElementPattern                                    -> FieldPattern
    ElementPattern                                    -> TypePattern
    ElementPattern                                    -> MethodConstrPattern
    ExceptionPattern                                  -> ThrowsCondition(ClassNamePattern)
    ExceptionPattern                                  -> NotThrowsCondition(ClassNamePattern)
    ThrowsPattern                                     -> ThrowsPattern(ListPlusOfExceptionPattern0)
    FieldModPattern                                   -> ModPattern(ListStarOfFieldMod_NotFieldMod0)
    ConstrModPattern                                  -> ModPattern(ListStarOfConstrMod_NotConstrMod0)
    MethodModPattern                                  -> ModPattern(ListStarOfMethodMod_NotMethodMod0)
    NotConstrMod                                      -> Not(ConstrMod)
    NotFieldMod                                       -> Not(FieldMod)
    NotMethodMod                                      -> Not(MethodMod)
    ConstrNamePattern                                 -> WildcardConstrName(TypePattern)
    ConstrNamePattern                                 -> ConstrName(TypePattern)
    ConstrNamePattern                                 -> ConstrName()
    ClassMemberNamePattern                            -> WildcardMemberName(TypePattern,IdPattern)
    ClassMemberNamePattern                            -> MemberName(TypePattern,IdPattern)
    ClassMemberNamePattern                            -> MemberName(IdPattern)
    FieldPattern                                      -> FieldPattern(AnnoPattern,FieldModPattern,TypePattern,ClassMemberNamePattern)
    MethodConstrPattern                               -> ConstrPattern
    MethodConstrPattern                               -> MethodPattern
    ConstrPattern                                     -> ConstrPattern(AnnoPattern,ConstrModPattern,ConstrNamePattern,ListStarOfFormalPattern0,OptThrowsPattern1)
    MethodPattern                                     -> MethodPattern(AnnoPattern,MethodModPattern,TypePattern,ClassMemberNamePattern,ListStarOfFormalPattern0,OptThrowsPattern1)
    FormalPattern                                     -> VarArityParamPattern(TypePattern)
    FormalPattern                                     -> TypePattern
    FormalPattern                                     -> FormalWildcard()
    ClassNamePattern                                  -> Subtype(NamePattern,TypeParamsPattern)
    ClassNamePattern                                  -> Subtype(NamePattern,TypeParamsPattern)
    ClassNamePattern                                  -> Subtype(NamePattern)
    ClassNamePattern                                  -> Generic(NamePattern,TypeParamsPattern)
    ClassNamePattern                                  -> SimpleNamePattern(NamePattern)
    TypeBoundPattern                                  -> WildcardLowerBound(ListPlusOfTypePattern0)
    TypeBoundPattern                                  -> WildcardUpperBound(ListPlusOfTypePattern0)
    TypeParamsPattern                                 -> TypeParams(ListPlusOfTypeParamPattern0)
    TypeParamPattern                                  -> TypeParam(TypePattern,OptTypeBoundPattern0)
    TopTypePattern                                    -> TypePattern
    TopTypePattern                                    -> AnnoTypePattern(AnnoPatternPlus,TypePattern)
    TypePattern                                       -> AnnoTypePattern(AnnoPatternPlus,TypePattern)
    TypePattern                                       -> GenericSubtypePattern(NamePattern,TypeParamsPattern)
    TypePattern                                       -> GenericTypePattern(TypeDecSpecPattern,TypeParamsPattern)
    TypeDecSpecPattern                                -> Subtype(NamePattern)
    TypeDecSpecPattern                                -> NamePattern
    TypePattern                                       -> Wildcard()
    TypePattern                                       -> ArrayType(TypePattern)
    TypePattern                                       -> Void()
    TypePattern                                       -> BaseTypePattern
    BaseTypePattern                                   -> PrimTypePattern(PrimType)
    BaseTypePattern                                   -> RefTypePattern(TypeDecSpecPattern)
    AnnoPatternPlus                                   -> AnnoPattern(ListPlusOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    AnnoPattern                                       -> AnnoPattern(ListStarOfSimpleAnnoPattern_NotSimpleAnnoPattern0)
    NotSimpleAnnoPattern                              -> Not(SimpleAnnoPattern)
    SimpleAnnoPattern                                 -> SimpleAnnoPatternExact(TypeName)
    SimpleAnnoPattern                                 -> SimpleAnnoPattern(TypePattern)
    TypePattern                                       -> OrComp(TypePattern,TypePattern)
    TypePattern                                       -> AndComp(TypePattern,TypePattern)
    TypePattern                                       -> NotComp(TypePattern)
    IdPattern                                         -> <string>
    NamePattern                                       -> WildcardNamePattern(NamePattern,IdPattern)
    NamePattern                                       -> NamePattern(NamePattern,IdPattern)
    NamePattern                                       -> NamePattern(IdPattern)
    ClassNamePattern                                  -> OrComp(ClassNamePattern,ClassNamePattern)
    ClassNamePattern                                  -> AndComp(ClassNamePattern,ClassNamePattern)
    ClassNamePattern                                  -> NotComp(ClassNamePattern)
    CompilationUnit                                   -> CompilationUnit(OptPackageDec0,ListStarOfImportDec0,ListPlusOfTypeDec0)
    TypeDec                                           -> Semicolon()
    TypeDec                                           -> InterfaceDec
    TypeDec                                           -> ClassDec
    ImportDec                                         -> StaticImportOnDemandDec(TypeName)
    ImportDec                                         -> StaticImportDec(TypeName,Id)
    ImportDec                                         -> TypeImportOnDemandDec(PackageName)
    ImportDec                                         -> TypeImportDec(TypeName)
    PackageDec                                        -> PackageDec(ListStarOfAnno0,PackageName)
    ElemVal                                           -> ElemValArrayInit(ListStarOfElemVal0)
    ElemVal                                           -> ElemValArrayInit(ListStarOfElemVal0)
    ElemVal                                           -> Anno
    ElemVal                                           -> Expr
    ElemValPair                                       -> ElemValPair(Id,ElemVal)
    Anno                                              -> MarkerAnno(TypeName)
    Anno                                              -> SingleElemAnno(TypeName,ElemVal)
    Anno                                              -> Anno(TypeName,ListStarOfElemValPair0)
    LHS                                               -> ArrayAccess
    LHS                                               -> FieldAccess
    LHS                                               -> ExprName
    Expr                                              -> AssignOr(LHS,Expr)
    Expr                                              -> AssignExcOr(LHS,Expr)
    Expr                                              -> AssignAnd(LHS,Expr)
    Expr                                              -> AssignURightShift(LHS,Expr)
    Expr                                              -> AssignRightShift(LHS,Expr)
    Expr                                              -> AssignLeftShift(LHS,Expr)
    Expr                                              -> AssignMinus(LHS,Expr)
    Expr                                              -> AssignPlus(LHS,Expr)
    Expr                                              -> AssignRemain(LHS,Expr)
    Expr                                              -> AssignDiv(LHS,Expr)
    Expr                                              -> AssignMul(LHS,Expr)
    Expr                                              -> Assign(LHS,Expr)
    CondMid                                           -> Expr
    Expr                                              -> Cond(Expr,CondMid,Expr)
    Expr                                              -> Or(Expr,Expr)
    Expr                                              -> ExcOr(Expr,Expr)
    Expr                                              -> And(Expr,Expr)
    Expr                                              -> LazyOr(Expr,Expr)
    Expr                                              -> LazyAnd(Expr,Expr)
    Expr                                              -> NotEq(Expr,Expr)
    Expr                                              -> Eq(Expr,Expr)
    Expr                                              -> GtEq(Expr,Expr)
    Expr                                              -> LtEq(Expr,Expr)
    Expr                                              -> Gt(Expr,Expr)
    Expr                                              -> Lt(Expr,Expr)
    Expr                                              -> URightShift(Expr,Expr)
    Expr                                              -> RightShift(Expr,Expr)
    Expr                                              -> LeftShift(Expr,Expr)
    Expr                                              -> Minus(Expr,Expr)
    Expr                                              -> Plus(Expr,Expr)
    Expr                                              -> Remain(Expr,Expr)
    Expr                                              -> Div(Expr,Expr)
    Expr                                              -> Mul(Expr,Expr)
    Expr                                              -> InstanceOf(Expr,RefType)
    Expr                                              -> ExprName
    Expr                                              -> CastRef(RefType,Expr)
    Expr                                              -> CastPrim(PrimType,Expr)
    Expr                                              -> Not(Expr)
    Expr                                              -> Complement(Expr)
    Expr                                              -> PreDecr(Expr)
    Expr                                              -> PreIncr(Expr)
    Expr                                              -> Minus(Expr)
    Expr                                              -> Plus(Expr)
    Expr                                              -> PostDecr(Expr)
    Expr                                              -> PostIncr(Expr)
    Expr                                              -> ExprName
    MethodSpec                                        -> GenericMethod(AmbName,TypeArgs,Id)
    MethodSpec                                        -> QSuperMethod(TypeName,OptTypeArgs2,Id)
    MethodSpec                                        -> SuperMethod(OptTypeArgs2,Id)
    MethodSpec                                        -> Method(Expr,OptTypeArgs2,Id)
    MethodSpec                                        -> Method(MethodName)
    Expr                                              -> Invoke(MethodSpec,ListStarOfExpr0)
    ArraySubscript                                    -> Expr
    ArrayAccess                                       -> ArrayAccess(Expr,ArraySubscript)
    Expr                                              -> ArrayAccess
    FieldAccess                                       -> QSuperField(TypeName,Id)
    FieldAccess                                       -> SuperField(Id)
    FieldAccess                                       -> Field(Expr,Id)
    Expr                                              -> FieldAccess
    DimExpr                                           -> Dim(Expr)
    ArrayBaseType                                     -> UnboundWld(TypeName)
    ArrayBaseType                                     -> TypeName
    ArrayBaseType                                     -> PrimType
    ArrayCreationExpr                                 -> NewArray(ArrayBaseType,ListPlusOfDim0,ArrayInit)
    ArrayCreationExpr                                 -> NewArray(ArrayBaseType,ListPlusOfDimExpr0,ListStarOfDim0)
    Expr                                              -> ArrayCreationExpr
    Expr                                              -> QNewInstance(Expr,OptTypeArgs2,Id,OptTypeArgs2,ListStarOfExpr0,OptClassBody0)
    Expr                                              -> NewInstance(OptTypeArgs2,ClassOrInterfaceType,ListStarOfExpr0,OptClassBody0)
    ClassMemberDec                                    -> Semicolon()
    ClassMemberDec                                    -> InterfaceDec
    ClassMemberDec                                    -> ClassDec
    ClassMemberDec                                    -> MethodDec
    ClassMemberDec                                    -> FieldDec
    ClassBodyDec                                      -> ConstrDec
    ClassBodyDec                                      -> StaticInit
    ClassBodyDec                                      -> InstanceInit
    ClassBodyDec                                      -> ClassMemberDec
    Interfaces                                        -> ImplementsDec(ListPlusOfInterfaceType0)
    Super                                             -> SuperDec(ClassType)
    ClassMod                                          -> StrictFP
    ClassMod                                          -> Final
    ClassMod                                          -> Static
    ClassMod                                          -> Private
    ClassMod                                          -> Protected
    ClassMod                                          -> Public
    ClassMod                                          -> Abstract
    ClassDecHead                                      -> ClassDecHead(ListStarOfAnno_ClassMod0,Id,OptTypeParams1,OptSuper0,OptInterfaces1)
    ClassBody                                         -> ClassBody(ListStarOfClassBodyDec0)
    ClassDec                                          -> ClassDec(ClassDecHead,ClassBody)
    ClassDec                                          -> EnumDec
    InterfaceMod                                      -> StrictFP
    InterfaceMod                                      -> Static
    InterfaceMod                                      -> Abstract
    InterfaceMod                                      -> Private
    InterfaceMod                                      -> Protected
    InterfaceMod                                      -> Public
    InterfaceMemberDec                                -> Semicolon()
    InterfaceMemberDec                                -> InterfaceDec
    InterfaceMemberDec                                -> ClassDec
    InterfaceMemberDec                                -> AbstractMethodDec
    InterfaceMemberDec                                -> ConstantDec
    ExtendsInterfaces                                 -> ExtendsInterfaces(ListPlusOfInterfaceType0)
    InterfaceDecHead                                  -> InterfaceDecHead(ListStarOfAnno_InterfaceMod0,Id,OptTypeParams1,OptExtendsInterfaces1)
    InterfaceDec                                      -> InterfaceDec(InterfaceDecHead,ListStarOfInterfaceMemberDec0)
    InterfaceDec                                      -> AnnoDec
    DefaultVal                                        -> DefaultVal(ElemVal)
    AnnoElemDec                                       -> Semicolon()
    AnnoElemDec                                       -> AnnoDec
    AnnoElemDec                                       -> EnumDec
    AnnoElemDec                                       -> InterfaceDec
    AnnoElemDec                                       -> ClassDec
    AnnoElemDec                                       -> ConstantDec
    AnnoElemDec                                       -> AnnoMethodDec(ListStarOfAbstractMethodMod0,Type,Id,OptDefaultVal0)
    AnnoDecHead                                       -> AnnoDecHead(ListStarOfAnno_InterfaceMod0,Id)
    AnnoDec                                           -> AnnoDec(AnnoDecHead,ListStarOfAnnoElemDec0)
    AbstractMethodMod                                 -> Abstract
    AbstractMethodMod                                 -> Public
    AbstractMethodDec                                 -> DeprAbstractMethodDec(ListStarOfAnno_AbstractMethodMod0,OptTypeParams1,ResultType,Id,ListStarOfFormalParam0,ListPlusOfDim0,OptThrows1)
    AbstractMethodDec                                 -> AbstractMethodDec(ListStarOfAnno_AbstractMethodMod0,OptTypeParams1,ResultType,Id,ListStarOfFormalParam0,OptThrows1)
    ConstantMod                                       -> Final
    ConstantMod                                       -> Static
    ConstantMod                                       -> Public
    ConstantDec                                       -> ConstantDec(ListStarOfAnno_ConstantMod0,Type,ListPlusOfVarDec0)
    EnumBodyDecs                                      -> EnumBodyDecs(ListStarOfClassBodyDec0)
    EnumConstArgs                                     -> ListStarOfExpr0
    EnumConst                                         -> EnumConst(Id,OptEnumConstArgs0,OptClassBody0)
    EnumBody                                          -> EnumBody(ListStarOfEnumConst0,OptEnumBodyDecs0)
    EnumBody                                          -> EnumBody(ListStarOfEnumConst0,OptEnumBodyDecs0)
    EnumDecHead                                       -> EnumDecHead(ListStarOfAnno_ClassMod0,Id,OptInterfaces1)
    EnumDec                                           -> EnumDec(EnumDecHead,EnumBody)
    ConstrMod                                         -> Private
    ConstrMod                                         -> Protected
    ConstrMod                                         -> Public
    ConstrInv                                         -> QSuperConstrInv(Expr,OptTypeArgs2,ListStarOfExpr0)
    ConstrInv                                         -> SuperConstrInv(OptTypeArgs2,ListStarOfExpr0)
    ConstrInv                                         -> AltConstrInv(OptTypeArgs2,ListStarOfExpr0)
    ConstrBody                                        -> ConstrBody(OptConstrInv0,ListStarOfBlockStm0)
    ConstrHead                                        -> ConstrDecHead(ListStarOfAnno_ConstrMod0,OptTypeParams1,Id,ListStarOfFormalParam0,OptThrows1)
    ConstrDec                                         -> ConstrDec(ConstrHead,ConstrBody)
    StaticInit                                        -> StaticInit(Block)
    InstanceInit                                      -> InstanceInit(Block)
    MethodBody                                        -> NoMethodBody()
    MethodBody                                        -> Block
    ExceptionType                                     -> ClassType
    Throws                                            -> ThrowsDec(ListPlusOfExceptionType0)
    MethodMod                                         -> StrictFP
    MethodMod                                         -> Native
    MethodMod                                         -> Synchronized
    MethodMod                                         -> Final
    MethodMod                                         -> Static
    MethodMod                                         -> Abstract
    MethodMod                                         -> Private
    MethodMod                                         -> Protected
    MethodMod                                         -> Public
    VarMod                                            -> Final
    FormalParam                                       -> VarArityParam(ListStarOfAnno_VarMod0,Type,VarDecId)
    FormalParam                                       -> Param(ListStarOfAnno_VarMod0,Type,VarDecId)
    ResultType                                        -> Void()
    ResultType                                        -> Type
    MethodDecHead                                     -> DeprMethodDecHead(ListStarOfAnno_MethodMod0,OptTypeParams1,ResultType,Id,ListStarOfFormalParam0,ListPlusOfDim0,OptThrows1)
    MethodDecHead                                     -> MethodDecHead(ListStarOfAnno_MethodMod0,OptTypeParams1,ResultType,Id,ListStarOfFormalParam0,OptThrows1)
    MethodDec                                         -> MethodDec(MethodDecHead,MethodBody)
    BlockStm                                          -> Stm
    BlockStm                                          -> ClassDecStm(ClassDec)
    BlockStm                                          -> LocalVarDecStm
    Block                                             -> Block(ListStarOfBlockStm0)
    CatchClause                                       -> Catch(FormalParam,Block)
    Stm                                               -> Try(Block,ListStarOfCatchClause0,Block)
    Stm                                               -> Try(Block,ListPlusOfCatchClause0)
    Stm                                               -> Synchronized(Expr,Block)
    Stm                                               -> Throw(Expr)
    Stm                                               -> Return(OptExpr0)
    Stm                                               -> Continue(OptId0)
    Stm                                               -> Break(OptId0)
    Stm                                               -> ForEach(FormalParam,Expr,Stm)
    Stm                                               -> For(ListStarOfExpr0,OptExpr0,ListStarOfExpr0,Stm)
    Stm                                               -> For(LocalVarDec,OptExpr0,ListStarOfExpr0,Stm)
    Stm                                               -> DoWhile(Stm,Expr)
    Stm                                               -> While(Expr,Stm)
    SwitchLabel                                       -> Default()
    SwitchLabel                                       -> Case(Expr)
    SwitchGroup                                       -> SwitchGroup(ListPlusOfSwitchLabel0,ListPlusOfBlockStm0)
    SwitchBlock                                       -> SwitchBlock(ListStarOfSwitchGroup0,ListStarOfSwitchLabel0)
    Stm                                               -> Switch(Expr,SwitchBlock)
    Stm                                               -> AssertStm(Expr,Expr)
    Stm                                               -> AssertStm(Expr)
    Stm                                               -> If(Expr,Stm,Stm)
    Stm                                               -> If(Expr,Stm)
    Stm                                               -> ExprStm(Expr)
    Stm                                               -> Labeled(Id,Stm)
    Stm                                               -> Empty()
    Stm                                               -> Block
    LocalVarDec                                       -> LocalVarDec(ListStarOfAnno_VarMod0,Type,ListPlusOfVarDec0)
    LocalVarDecStm                                    -> LocalVarDecStm(LocalVarDec)
    FieldMod                                          -> Volatile
    FieldMod                                          -> Transient
    FieldMod                                          -> Final
    FieldMod                                          -> Static
    FieldMod                                          -> Private
    FieldMod                                          -> Protected
    FieldMod                                          -> Public
    VarInit                                           -> ArrayInit
    VarInit                                           -> Expr
    Dim                                               -> Dim()
    VarDecId                                          -> ArrayVarDecId(Id,ListPlusOfDim0)
    VarDecId                                          -> Id
    VarDec                                            -> VarDec(VarDecId,VarInit)
    VarDec                                            -> VarDec(VarDecId)
    FieldDec                                          -> FieldDec(ListStarOfAnno_FieldMod0,Type,ListPlusOfVarDec0)
    ArrayInit                                         -> ArrayInit(ListStarOfVarInit0)
    ArrayInit                                         -> ArrayInit(ListStarOfVarInit0)
    Expr                                              -> QThis(TypeName)
    Expr                                              -> This()
    ClassLiteral                                      -> VoidClass()
    ClassLiteral                                      -> Class(Type)
    Literal                                           -> ClassLiteral
    Literal                                           -> NullLiteral
    Literal                                           -> StringLiteral
    Literal                                           -> CharLiteral
    Literal                                           -> BoolLiteral
    Literal                                           -> FloatLiteral
    Literal                                           -> IntLiteral
    Expr                                              -> Lit(Literal)
    Type                                              -> RefType
    Type                                              -> PrimType
    ArrayType                                         -> ArrayType(Type)
    TypeVar                                           -> TypeVar(TypeVarId)
    TypeDecSpec                                       -> Member(TypeDecSpec,TypeArgs,Id)
    TypeDecSpec                                       -> TypeName
    InterfaceType                                     -> InterfaceType(TypeDecSpec,OptTypeArgs2)
    ClassType                                         -> ClassType(TypeDecSpec,OptTypeArgs2)
    ClassOrInterfaceType                              -> ClassOrInterfaceType(TypeDecSpec,OptTypeArgs2)
    RefType                                           -> ArrayType
    RefType                                           -> ClassOrInterfaceType
    TypeVarId                                         -> Id
    TypeParams                                        -> TypeParams(ListPlusOfTypeParam0)
    TypeBound                                         -> TypeBound(ListPlusOfClassOrInterfaceType0)
    TypeParam                                         -> TypeParam(TypeVarId,OptTypeBound1)
    WildcardBound                                     -> WildcardLowerBound(RefType)
    WildcardBound                                     -> WildcardUpperBound(RefType)
    ActualTypeArg                                     -> Wildcard(OptWildcardBound0)
    ActualTypeArg                                     -> Type
    TypeArgs                                          -> TypeArgs(ListPlusOfActualTypeArg0)
    PackageOrTypeName                                 -> PackageOrTypeName(PackageOrTypeName,Id)
    PackageOrTypeName                                 -> PackageOrTypeName(Id)
    MethodName                                        -> MethodName(AmbName,Id)
    MethodName                                        -> MethodName(Id)
    ExprName                                          -> ExprName(AmbName,Id)
    ExprName                                          -> ExprName(Id)
    TypeName                                          -> TypeName(PackageOrTypeName,Id)
    TypeName                                          -> TypeName(Id)
    AmbName                                           -> AmbName(AmbName,Id)
    AmbName                                           -> AmbName(Id)
    PackageName                                       -> PackageName(ListPlusOfId0)
    FloatType                                         -> Double()
    FloatType                                         -> Float()
    IntType                                           -> Char()
    IntType                                           -> Long()
    IntType                                           -> Int()
    IntType                                           -> Short()
    IntType                                           -> Byte()
    NumType                                           -> FloatType
    NumType                                           -> IntType
    PrimType                                          -> Boolean()
    PrimType                                          -> NumType
    NullLiteral                                       -> Null()
    StringPart                                        -> EscapeSeq
    StringPart                                        -> UnicodeEscape
    StringPart                                        -> Chars(StringChars)
    StringLiteral                                     -> String(ListStarOfStringPart0)
    StringChars                                       -> <string>
    SingleChar                                        -> <int>
    CharContent                                       -> EscapeSeq
    CharContent                                       -> UnicodeEscape
    CharContent                                       -> Single(SingleChar)
    CharLiteral                                       -> Char(CharContent)
    LastOcta                                          -> <int>
    OctaEscape                                        -> OctaEscape3(<int>,<int>,<int>)
    OctaEscape                                        -> OctaEscape2(<int>,<int>)
    OctaEscape                                        -> OctaEscape2(<int>,LastOcta)
    OctaEscape                                        -> OctaEscape1(LastOcta)
    NamedEscape                                       -> NamedEscape(<int>)
    EscapeSeq                                         -> NamedEscape
    EscapeSeq                                         -> OctaEscape
    Bool                                              -> False()
    Bool                                              -> True()
    BoolLiteral                                       -> Bool(Bool)
    BinaryExponent                                    -> <string>
    HexaSignificand                                   -> <string>
    HexaFloatNumeral                                  -> <string>
    SignedInteger                                     -> <string>
    DeciFloatExponentPart                             -> <string>
    DeciFloatDigits                                   -> <string>
    DeciFloatNumeral                                  -> <string>
    FloatLiteral                                      -> Float(HexaFloatLiteral)
    FloatLiteral                                      -> Float(DeciFloatLiteral)
    HexaFloatLiteral                                  -> <string>
    DeciFloatLiteral                                  -> <string>
    IntLiteral                                        -> Octa(OctaLiteral)
    IntLiteral                                        -> Hexa(HexaLiteral)
    IntLiteral                                        -> Deci(DeciLiteral)
    OctaNumeral                                       -> <string>
    HexaNumeral                                       -> <string>
    DeciNumeral                                       -> <string>
    OctaLiteral                                       -> <string>
    HexaLiteral                                       -> <string>
    DeciLiteral                                       -> <string>
    Modifier                                          -> StrictFP
    Modifier                                          -> Synchronized
    Modifier                                          -> Volatile
    Modifier                                          -> Transient
    Modifier                                          -> Native
    Modifier                                          -> Static
    Modifier                                          -> Final
    Modifier                                          -> Abstract
    Modifier                                          -> Protected
    Modifier                                          -> Private
    Modifier                                          -> Public
    StrictFP                                          -> StrictFP()
    Synchronized                                      -> Synchronized()
    Volatile                                          -> Volatile()
    Transient                                         -> Transient()
    Native                                            -> Native()
    Static                                            -> Static()
    Final                                             -> Final()
    Abstract                                          -> Abstract()
    Protected                                         -> Protected()
    Private                                           -> Private()
    Public                                            -> Public()
    Id                                                -> Id(ID)
    ID                                                -> <string>
    Keyword                                           -> <string>
    UnicodeEscape                                     -> <string>
    EscChar                                           -> <string>
    EscEscChar                                        -> <string>
    Asterisk                                          -> <string>
    BlockCommentChars                                 -> <string>
    CommentPart                                       -> <string>
    EOLCommentChars                                   -> <string>
    Comment                                           -> <string>
    EndOfFile                                         -> <string>
    CarriageReturn                                    -> <string>
    LineTerminator                                    -> <string>
    UnicodeEscape                                     -> UnicodeEscape(ListPlusOfCharClass2,<int>,<int>,<int>,<int>)
