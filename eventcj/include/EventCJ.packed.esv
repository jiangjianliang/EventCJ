Module("EventCJ.main.packed",Imports([Import("EventCJ.main"),Import("EventCJ-Builders"),Import("EventCJ-Colorer"),Import("EventCJ-Completions"),Import("EventCJ-Folding"),Import("EventCJ-Outliner"),Import("EventCJ-References"),Import("EventCJ-Syntax"),Import("EventCJ-Builders.generated"),Import("EventCJ-Colorer.generated"),Import("EventCJ-Completions.generated"),Import("EventCJ-Folding.generated"),Import("EventCJ-Outliner.generated"),Import("EventCJ-References.generated"),Import("EventCJ-Syntax.generated")]),[Language(" General properties",[LanguageName("EventCJ"),LanguageId("eventcj"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the EventCJ language\"")),URL("http://strategoxt.org"),Extensions(Values(["ecj"])),Table("include/EventCJ.tbl"),StartSymbols([Sort("CompilationUnit")])]),Builders("",[SemanticProvider("include/eventcj.ctree"),SemanticObserver(Strategy("editor-analyze"),[]),Builder(String("\"Generate Java code (for selection)\""),Strategy("generate-java"),[OpenEditor,RealTime]),Builder(String("\"Show abstract syntax (for selection)\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Meta,Source])]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionTemplateEx([],NoCompletionPrefix,[String("\"module \""),Placeholder("<m>")],[Blank]),CompletionTemplateEx([],NoCompletionPrefix,[String("\"entity \""),Placeholder("<e>"),String("\" {}\"")],[Blank]),CompletionProposer([],Strategy("editor-complete")),CompletionTrigger(String("\":\""),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("CompilationUnit"),Constructor("CompilationUnit")),None),FoldRule(SortAndConstructor(Sort("PackageDec"),Constructor("PackageDec")),None),FoldRule(SortAndConstructor(Sort("Expr"),Constructor("Lit")),None),FoldRule(Sort("StringLiteral"),None),FoldRule(SortAndConstructor(Sort("StringLiteral"),Constructor("String")),None),FoldRule(SortAndConstructor(Sort("VarDecId"),Constructor("ArrayVarDecId")),None),FoldRule(Sort("OptTypeParams0"),None),FoldRule(SortAndConstructor(Sort("TypeParams"),Constructor("TypeParams")),None),FoldRule(SortAndConstructor(Sort("TypeParam"),Constructor("TypeParam")),None),FoldRule(Sort("OptTypeBound0"),None),FoldRule(SortAndConstructor(Sort("TypeBound"),Constructor("TypeBound")),None),FoldRule(Sort("OptThrows0"),None),FoldRule(SortAndConstructor(Sort("Throws"),Constructor("ThrowsDec")),None),FoldRule(SortAndConstructor(Sort("ClassType"),Constructor("ClassType")),None),FoldRule(Sort("OptInterfaces0"),None),FoldRule(SortAndConstructor(Sort("Interfaces"),Constructor("ImplementsDec")),None),FoldRule(SortAndConstructor(Sort("InterfaceType"),Constructor("InterfaceType")),None),FoldRule(Sort("OptExtendsInterfaces0"),None),FoldRule(SortAndConstructor(Sort("ExtendsInterfaces"),Constructor("ExtendsInterfaces")),None),FoldRule(SortAndConstructor(Sort("MethodSpec"),Constructor("SuperMethod")),None),FoldRule(SortAndConstructor(Sort("MethodSpec"),Constructor("QSuperMethod")),None),FoldRule(SortAndConstructor(Sort("MethodSpec"),Constructor("GenericMethod")),None),FoldRule(SortAndConstructor(Sort("PackageName"),Constructor("PackageName")),None),FoldRule(SortAndConstructor(Sort("ImportDec"),Constructor("TypeImportOnDemandDec")),None),FoldRule(SortAndConstructor(Sort("DirectorDecl"),Constructor("Direction")),None),FoldRule(SortAndConstructor(Sort("EventDecl"),Constructor("EventDecl")),None),FoldRule(SortAndConstructor(Sort("MethodPattern"),Constructor("MethodPattern")),None),FoldRule(SortAndConstructor(Sort("AnnoPattern"),Constructor("AnnoPattern")),None),FoldRule(SortAndConstructor(Sort("MethodModPattern"),Constructor("ModPattern")),None),FoldRule(SortAndConstructor(Sort("ClassMemberNamePattern"),Constructor("MemberName")),None),FoldRule(SortAndConstructor(Sort("ClassMemberNamePattern"),Constructor("WildcardMemberName")),None),FoldRule(Sort("TypePattern"),None),FoldRule(SortAndConstructor(Sort("FormalPattern"),Constructor("VarArityParamPattern")),None),FoldRule(Sort("OptThrowsPattern0"),None),FoldRule(SortAndConstructor(Sort("ThrowsPattern"),Constructor("ThrowsPattern")),None),FoldRule(SortAndConstructor(Sort("ClassNamePattern"),Constructor("Generic")),None),FoldRule(SortAndConstructor(Sort("ClassNamePattern"),Constructor("Subtype")),None),FoldRule(SortAndConstructor(Sort("ClassNamePattern"),Constructor("Subtype")),None),FoldRule(SortAndConstructor(Sort("ConstrPattern"),Constructor("ConstrPattern")),None),FoldRule(SortAndConstructor(Sort("ConstrModPattern"),Constructor("ModPattern")),None),FoldRule(SortAndConstructor(Sort("ConstrNamePattern"),Constructor("ConstrName")),None),FoldRule(SortAndConstructor(Sort("ConstrNamePattern"),Constructor("WildcardConstrName")),None),FoldRule(Sort("OptSender0"),None),FoldRule(SortAndConstructor(Sort("Sender"),Constructor("SendTo")),None),FoldRule(SortAndConstructor(Sort("TransitionRuleDecl"),Constructor("TransitionRuleDecl")),None)]),Outliner(" Default outliner        ",[OutlineRule(SortAndConstructor(Sort("Anno"),Constructor("Anno"))),OutlineRule(SortAndConstructor(Sort("TypeDecSpec"),Constructor("Member"))),OutlineRule(SortAndConstructor(Sort("VarDecId"),Constructor("ArrayVarDecId"))),OutlineRule(SortAndConstructor(Sort("MethodDecHead"),Constructor("MethodDecHead"))),OutlineRule(SortAndConstructor(Sort("FormalParam"),Constructor("Param"))),OutlineRule(SortAndConstructor(Sort("FormalParam"),Constructor("VarArityParam"))),OutlineRule(SortAndConstructor(Sort("MethodDecHead"),Constructor("DeprMethodDecHead"))),OutlineRule(SortAndConstructor(Sort("EnumDecHead"),Constructor("EnumDecHead"))),OutlineRule(SortAndConstructor(Sort("ClassDecHead"),Constructor("ClassDecHead"))),OutlineRule(SortAndConstructor(Sort("Stm"),Constructor("For"))),OutlineRule(SortAndConstructor(Sort("Stm"),Constructor("For"))),OutlineRule(SortAndConstructor(Sort("Stm"),Constructor("Synchronized"))),OutlineRule(SortAndConstructor(Sort("AnnoDecHead"),Constructor("AnnoDecHead"))),OutlineRule(SortAndConstructor(Sort("AnnoElemDec"),Constructor("AnnoMethodDec"))),OutlineRule(SortAndConstructor(Sort("InterfaceDecHead"),Constructor("InterfaceDecHead"))),OutlineRule(SortAndConstructor(Sort("AbstractMethodDec"),Constructor("AbstractMethodDec"))),OutlineRule(SortAndConstructor(Sort("AbstractMethodDec"),Constructor("DeprAbstractMethodDec"))),OutlineRule(SortAndConstructor(Sort("LayerDecl"),Constructor("Layer"))),OutlineRule(SortAndConstructor(Sort("PartialMethodHead"),Constructor("PartialMethodHead"))),OutlineRule(SortAndConstructor(Sort("ConstrHead"),Constructor("ConstrDecHead"))),OutlineRule(SortAndConstructor(Sort("ConstrInv"),Constructor("QSuperConstrInv"))),OutlineRule(SortAndConstructor(Sort("Expr"),Constructor("QNewInstance"))),OutlineRule(SortAndConstructor(Sort("ArrayCreationExpr"),Constructor("NewArray"))),OutlineRule(SortAndConstructor(Sort("ArrayCreationExpr"),Constructor("NewArray"))),OutlineRule(SortAndConstructor(Sort("Expr"),Constructor("Invoke"))),OutlineRule(SortAndConstructor(Sort("MethodSpec"),Constructor("GenericMethod"))),OutlineRule(SortAndConstructor(Sort("DirectorDecl"),Constructor("Direction"))),OutlineRule(SortAndConstructor(Sort("EventDecl"),Constructor("EventDecl"))),OutlineRule(SortAndConstructor(Sort("MethodPattern"),Constructor("MethodPattern"))),OutlineRule(SortAndConstructor(Sort("TypePattern"),Constructor("GenericTypePattern"))),OutlineRule(SortAndConstructor(Sort("TypePattern"),Constructor("GenericSubtypePattern"))),OutlineRule(SortAndConstructor(Sort("ClassNamePattern"),Constructor("Generic"))),OutlineRule(SortAndConstructor(Sort("ClassNamePattern"),Constructor("Subtype"))),OutlineRule(SortAndConstructor(Sort("ClassNamePattern"),Constructor("Subtype"))),OutlineRule(SortAndConstructor(Sort("ConstrPattern"),Constructor("ConstrPattern"))),OutlineRule(SortAndConstructor(Sort("TransitionRuleDecl"),Constructor("TransitionRuleDecl")))]),References("",[ReferenceRule("_",Strategy("editor-resolve")),HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])